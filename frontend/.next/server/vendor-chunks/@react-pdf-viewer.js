"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-pdf-viewer";
exports.ids = ["vendor-chunks/@react-pdf-viewer"];
exports.modules = {

/***/ "(ssr)/./node_modules/@react-pdf-viewer/core/lib/cjs/core.js":
/*!*************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/core/lib/cjs/core.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar PdfJsApi = __webpack_require__(/*! pdfjs-dist */ \"(ssr)/./node_modules/pdfjs-dist/build/pdf.js\");\n\nfunction _interopNamespaceDefault(e) {\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n.default = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\nvar PdfJsApi__namespace = /*#__PURE__*/_interopNamespaceDefault(PdfJsApi);\n\nexports.AnnotationType = void 0;\n(function (AnnotationType) {\n    AnnotationType[AnnotationType[\"Text\"] = 1] = \"Text\";\n    AnnotationType[AnnotationType[\"Link\"] = 2] = \"Link\";\n    AnnotationType[AnnotationType[\"FreeText\"] = 3] = \"FreeText\";\n    AnnotationType[AnnotationType[\"Line\"] = 4] = \"Line\";\n    AnnotationType[AnnotationType[\"Square\"] = 5] = \"Square\";\n    AnnotationType[AnnotationType[\"Circle\"] = 6] = \"Circle\";\n    AnnotationType[AnnotationType[\"Polygon\"] = 7] = \"Polygon\";\n    AnnotationType[AnnotationType[\"Polyline\"] = 8] = \"Polyline\";\n    AnnotationType[AnnotationType[\"Highlight\"] = 9] = \"Highlight\";\n    AnnotationType[AnnotationType[\"Underline\"] = 10] = \"Underline\";\n    AnnotationType[AnnotationType[\"Squiggly\"] = 11] = \"Squiggly\";\n    AnnotationType[AnnotationType[\"StrikeOut\"] = 12] = \"StrikeOut\";\n    AnnotationType[AnnotationType[\"Stamp\"] = 13] = \"Stamp\";\n    AnnotationType[AnnotationType[\"Caret\"] = 14] = \"Caret\";\n    AnnotationType[AnnotationType[\"Ink\"] = 15] = \"Ink\";\n    AnnotationType[AnnotationType[\"Popup\"] = 16] = \"Popup\";\n    AnnotationType[AnnotationType[\"FileAttachment\"] = 17] = \"FileAttachment\";\n})(exports.AnnotationType || (exports.AnnotationType = {}));\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nexports.TextDirection = void 0;\n(function (TextDirection) {\n    TextDirection[\"RightToLeft\"] = \"RTL\";\n    TextDirection[\"LeftToRight\"] = \"LTR\";\n})(exports.TextDirection || (exports.TextDirection = {}));\nvar ThemeContext = React__namespace.createContext({\n    currentTheme: 'light',\n    direction: exports.TextDirection.LeftToRight,\n    setCurrentTheme: function () { },\n});\n\nvar classNames = function (classes) {\n    var result = [];\n    Object.keys(classes).forEach(function (clazz) {\n        if (clazz && classes[clazz]) {\n            result.push(clazz);\n        }\n    });\n    return result.join(' ');\n};\n\nvar Button = function (_a) {\n    var children = _a.children, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ className: classNames({\n            'rpv-core__button': true,\n            'rpv-core__button--rtl': isRtl,\n        }), type: \"button\", onClick: onClick }, attrs), children));\n};\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React__namespace.useLayoutEffect : React__namespace.useEffect;\n\nvar useIntersectionObserver = function (props) {\n    var containerRef = React__namespace.useRef(null);\n    var once = props.once, threshold = props.threshold, onVisibilityChanged = props.onVisibilityChanged;\n    useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var intersectionTracker = new IntersectionObserver(function (entries) {\n            entries.forEach(function (entry) {\n                var isVisible = entry.isIntersecting;\n                var ratio = entry.intersectionRatio;\n                onVisibilityChanged({ isVisible: isVisible, ratio: ratio });\n                if (isVisible && once) {\n                    intersectionTracker.unobserve(container);\n                    intersectionTracker.disconnect();\n                }\n            });\n        }, {\n            threshold: threshold || 0,\n        });\n        intersectionTracker.observe(container);\n        return function () {\n            intersectionTracker.unobserve(container);\n            intersectionTracker.disconnect();\n        };\n    }, []);\n    return containerRef;\n};\n\nvar LazyRender = function (_a) {\n    var attrs = _a.attrs, children = _a.children, testId = _a.testId;\n    var _b = React__namespace.useState(false), visible = _b[0], setVisible = _b[1];\n    var containerAttrs = testId ? __assign(__assign({}, attrs), { 'data-testid': testId }) : attrs;\n    var handleVisibilityChanged = function (params) {\n        if (params.isVisible) {\n            setVisible(true);\n        }\n    };\n    var containerRef = useIntersectionObserver({\n        once: true,\n        onVisibilityChanged: handleVisibilityChanged,\n    });\n    return (React__namespace.createElement(\"div\", __assign({ ref: containerRef }, containerAttrs), visible && children));\n};\n\nvar Menu = function (_a) {\n    var children = _a.children;\n    var containerRef = React__namespace.useRef();\n    var visibleMenuItemsRef = React__namespace.useRef([]);\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var handleKeyDown = function (e) {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        switch (e.key) {\n            case 'Tab':\n                e.preventDefault();\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                moveToItem(function (_, currentIndex) { return currentIndex + 1; });\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                moveToItem(function (_, currentIndex) { return currentIndex - 1; });\n                break;\n            case 'End':\n                e.preventDefault();\n                moveToItem(function (items, _) { return items.length - 1; });\n                break;\n            case 'Home':\n                e.preventDefault();\n                moveToItem(function (_, __) { return 0; });\n                break;\n        }\n    };\n    var moveToItem = function (getNextItem) {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var items = visibleMenuItemsRef.current;\n        var currentIndex = items.findIndex(function (item) { return item.getAttribute('tabindex') === '0'; });\n        var targetIndex = Math.min(items.length - 1, Math.max(0, getNextItem(items, currentIndex)));\n        if (currentIndex >= 0 && currentIndex <= items.length - 1) {\n            items[currentIndex].setAttribute('tabindex', '-1');\n        }\n        items[targetIndex].setAttribute('tabindex', '0');\n        items[targetIndex].focus();\n    };\n    var findVisibleItems = function (container) {\n        var visibleItems = [];\n        container.querySelectorAll('.rpv-core__menu-item[role=\"menuitem\"]').forEach(function (item) {\n            if (item instanceof HTMLElement) {\n                var parent_1 = item.parentElement;\n                if (parent_1 === container) {\n                    visibleItems.push(item);\n                }\n                else {\n                    if (window.getComputedStyle(parent_1).display !== 'none') {\n                        visibleItems.push(item);\n                    }\n                }\n            }\n        });\n        return visibleItems;\n    };\n    useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var visibleItems = findVisibleItems(container);\n        visibleMenuItemsRef.current = visibleItems;\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        document.addEventListener('keydown', handleKeyDown);\n        return function () {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, \"aria-orientation\": \"vertical\", className: classNames({\n            'rpv-core__menu': true,\n            'rpv-core__menu--rtl': isRtl,\n        }), role: \"menu\", tabIndex: 0 }, children));\n};\n\nvar MenuDivider = function () { return (React__namespace.createElement(\"div\", { \"aria-orientation\": \"horizontal\", className: \"rpv-core__menu-divider\", role: \"separator\" })); };\n\nvar Icon = function (_a) {\n    var children = _a.children, _b = _a.ignoreDirection, ignoreDirection = _b === void 0 ? false : _b, _c = _a.size, size = _c === void 0 ? 24 : _c;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = !ignoreDirection && direction === exports.TextDirection.RightToLeft;\n    var width = \"\".concat(size || 24, \"px\");\n    return (React__namespace.createElement(\"svg\", { \"aria-hidden\": \"true\", className: classNames({\n            'rpv-core__icon': true,\n            'rpv-core__icon--rtl': isRtl,\n        }), focusable: \"false\", height: width, viewBox: \"0 0 24 24\", width: width }, children));\n};\n\nvar CheckIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M23.5,0.499l-16.5,23l-6.5-6.5\" }))); };\n\nvar MenuItem = function (_a) {\n    var _b = _a.checked, checked = _b === void 0 ? false : _b, children = _a.children, _c = _a.icon, icon = _c === void 0 ? null : _c, _d = _a.isDisabled, isDisabled = _d === void 0 ? false : _d, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ className: classNames({\n            'rpv-core__menu-item': true,\n            'rpv-core__menu-item--disabled': isDisabled,\n            'rpv-core__menu-item--ltr': !isRtl,\n            'rpv-core__menu-item--rtl': isRtl,\n        }), role: \"menuitem\", tabIndex: -1, type: \"button\", onClick: onClick }, attrs),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__menu-item-icon': true,\n                'rpv-core__menu-item-icon--ltr': !isRtl,\n                'rpv-core__menu-item-icon--rtl': isRtl,\n            }) }, icon),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__menu-item-label': true,\n                'rpv-core__menu-item-label--ltr': !isRtl,\n                'rpv-core__menu-item-label--rtl': isRtl,\n            }) }, children),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__menu-item-check': true,\n                'rpv-core__menu-item-check--ltr': !isRtl,\n                'rpv-core__menu-item-check--rtl': isRtl,\n            }) }, checked && React__namespace.createElement(CheckIcon, null))));\n};\n\nvar MinimalButton = function (_a) {\n    var _b = _a.ariaLabel, ariaLabel = _b === void 0 ? '' : _b, _c = _a.ariaKeyShortcuts, ariaKeyShortcuts = _c === void 0 ? '' : _c, children = _a.children, _d = _a.isDisabled, isDisabled = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ \"aria-label\": ariaLabel }, (ariaKeyShortcuts && { 'aria-keyshortcuts': ariaKeyShortcuts }), (isDisabled && { 'aria-disabled': true }), { className: classNames({\n            'rpv-core__minimal-button': true,\n            'rpv-core__minimal-button--disabled': isDisabled,\n            'rpv-core__minimal-button--rtl': isRtl,\n            'rpv-core__minimal-button--selected': isSelected,\n        }), type: \"button\", onClick: onClick }, attrs), children));\n};\n\nvar PrimaryButton = function (_a) {\n    var children = _a.children, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ className: classNames({\n            'rpv-core__primary-button': true,\n            'rpv-core__primary-button--rtl': isRtl,\n        }), type: \"button\", onClick: onClick }, attrs), children));\n};\n\nvar ProgressBar = function (_a) {\n    var progress = _a.progress;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    return (React__namespace.createElement(\"div\", { className: classNames({\n            'rpv-core__progress-bar': true,\n            'rpv-core__progress-bar--rtl': isRtl,\n        }) },\n        React__namespace.createElement(\"div\", { className: \"rpv-core__progress-bar-progress\", style: { width: \"\".concat(progress, \"%\") } },\n            progress,\n            \"%\")));\n};\n\nvar Separator = function () { return React__namespace.createElement(\"div\", { className: \"rpv-core__separator\" }); };\n\nvar Spinner = function (_a) {\n    var _b = _a.size, size = _b === void 0 ? '4rem' : _b, testId = _a.testId;\n    var _c = React__namespace.useState(false), visible = _c[0], setVisible = _c[1];\n    var attrs = testId ? { 'data-testid': testId } : {};\n    var handleVisibilityChanged = function (params) {\n        setVisible(params.isVisible);\n    };\n    var containerRef = useIntersectionObserver({\n        onVisibilityChanged: handleVisibilityChanged,\n    });\n    return (React__namespace.createElement(\"div\", __assign({}, attrs, { className: classNames({\n            'rpv-core__spinner': true,\n            'rpv-core__spinner--animating': visible,\n        }), ref: containerRef, style: { height: size, width: size } })));\n};\n\nvar Splitter = function (_a) {\n    var constrain = _a.constrain;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var resizerRef = React__namespace.useRef();\n    var leftSideRef = React__namespace.useRef();\n    var rightSideRef = React__namespace.useRef();\n    var xRef = React__namespace.useRef(0);\n    var yRef = React__namespace.useRef(0);\n    var leftWidthRef = React__namespace.useRef(0);\n    var resizerWidthRef = React__namespace.useRef(0);\n    var eventOptions = {\n        capture: true,\n    };\n    var handleMouseMove = function (e) {\n        var resizerEle = resizerRef.current;\n        var leftSide = leftSideRef.current;\n        var rightSide = rightSideRef.current;\n        if (!resizerEle || !leftSide || !rightSide) {\n            return;\n        }\n        var resizerWidth = resizerWidthRef.current;\n        var dx = e.clientX - xRef.current;\n        var firstHalfSize = leftWidthRef.current + (isRtl ? -dx : dx);\n        var containerWidth = resizerEle.parentElement.getBoundingClientRect().width;\n        var firstHalfPercentage = (firstHalfSize * 100) / containerWidth;\n        resizerEle.classList.add('rpv-core__splitter--resizing');\n        if (constrain) {\n            var secondHalfSize = containerWidth - firstHalfSize - resizerWidth;\n            var secondHalfPercentage = (secondHalfSize * 100) / containerWidth;\n            if (!constrain({ firstHalfPercentage: firstHalfPercentage, firstHalfSize: firstHalfSize, secondHalfPercentage: secondHalfPercentage, secondHalfSize: secondHalfSize })) {\n                return;\n            }\n        }\n        leftSide.style.width = \"\".concat(firstHalfPercentage, \"%\");\n        document.body.classList.add('rpv-core__splitter-body--resizing');\n        leftSide.classList.add('rpv-core__splitter-sibling--resizing');\n        rightSide.classList.add('rpv-core__splitter-sibling--resizing');\n    };\n    var handleMouseUp = function (e) {\n        var resizerEle = resizerRef.current;\n        var leftSide = leftSideRef.current;\n        var rightSide = rightSideRef.current;\n        if (!resizerEle || !leftSide || !rightSide) {\n            return;\n        }\n        document.body.classList.remove('rpv-core__splitter-body--resizing');\n        resizerEle.classList.remove('rpv-core__splitter--resizing');\n        leftSide.classList.remove('rpv-core__splitter-sibling--resizing');\n        rightSide.classList.remove('rpv-core__splitter-sibling--resizing');\n        document.removeEventListener('mousemove', handleMouseMove, eventOptions);\n        document.removeEventListener('mouseup', handleMouseUp, eventOptions);\n    };\n    var handleMouseDown = function (e) {\n        var leftSide = leftSideRef.current;\n        if (!leftSide) {\n            return;\n        }\n        xRef.current = e.clientX;\n        yRef.current = e.clientY;\n        leftWidthRef.current = leftSide.getBoundingClientRect().width;\n        document.addEventListener('mousemove', handleMouseMove, eventOptions);\n        document.addEventListener('mouseup', handleMouseUp, eventOptions);\n    };\n    React__namespace.useEffect(function () {\n        var resizerEle = resizerRef.current;\n        if (!resizerEle) {\n            return;\n        }\n        resizerWidthRef.current = resizerEle.getBoundingClientRect().width;\n        leftSideRef.current = resizerEle.previousElementSibling;\n        rightSideRef.current = resizerEle.nextElementSibling;\n    }, []);\n    return React__namespace.createElement(\"div\", { ref: resizerRef, className: \"rpv-core__splitter\", onMouseDown: handleMouseDown });\n};\n\nvar TextBox = function (_a) {\n    var _b = _a.ariaLabel, ariaLabel = _b === void 0 ? '' : _b, _c = _a.autoFocus, autoFocus = _c === void 0 ? false : _c, _d = _a.placeholder, placeholder = _d === void 0 ? '' : _d, testId = _a.testId, _e = _a.type, type = _e === void 0 ? 'text' : _e, _f = _a.value, value = _f === void 0 ? '' : _f, onChange = _a.onChange, _g = _a.onKeyDown, onKeyDown = _g === void 0 ? function () { } : _g;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var textboxRef = React__namespace.useRef();\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = {\n        ref: textboxRef,\n        'data-testid': '',\n        'aria-label': ariaLabel,\n        className: classNames({\n            'rpv-core__textbox': true,\n            'rpv-core__textbox--rtl': isRtl,\n        }),\n        placeholder: placeholder,\n        value: value,\n        onChange: function (e) { return onChange(e.target.value); },\n        onKeyDown: onKeyDown,\n    };\n    if (testId) {\n        attrs['data-testid'] = testId;\n    }\n    useIsomorphicLayoutEffect(function () {\n        if (autoFocus) {\n            var textboxEle = textboxRef.current;\n            if (textboxEle) {\n                var x = window.scrollX;\n                var y = window.scrollY;\n                textboxEle.focus();\n                window.scrollTo(x, y);\n            }\n        }\n    }, []);\n    return type === 'text' ? React__namespace.createElement(\"input\", __assign({ type: \"text\" }, attrs)) : React__namespace.createElement(\"input\", __assign({ type: \"password\" }, attrs));\n};\n\nvar Api;\n(function (Api) {\n    Api[Api[\"ExitFullScreen\"] = 0] = \"ExitFullScreen\";\n    Api[Api[\"FullScreenChange\"] = 1] = \"FullScreenChange\";\n    Api[Api[\"FullScreenElement\"] = 2] = \"FullScreenElement\";\n    Api[Api[\"FullScreenEnabled\"] = 3] = \"FullScreenEnabled\";\n    Api[Api[\"RequestFullScreen\"] = 4] = \"RequestFullScreen\";\n})(Api || (Api = {}));\nvar defaultVendor = {\n    ExitFullScreen: 'exitFullscreen',\n    FullScreenChange: 'fullscreenchange',\n    FullScreenElement: 'fullscreenElement',\n    FullScreenEnabled: 'fullscreenEnabled',\n    RequestFullScreen: 'requestFullscreen',\n};\nvar webkitVendor = {\n    ExitFullScreen: 'webkitExitFullscreen',\n    FullScreenChange: 'webkitfullscreenchange',\n    FullScreenElement: 'webkitFullscreenElement',\n    FullScreenEnabled: 'webkitFullscreenEnabled',\n    RequestFullScreen: 'webkitRequestFullscreen',\n};\nvar msVendor = {\n    ExitFullScreen: 'msExitFullscreen',\n    FullScreenChange: 'msFullscreenChange',\n    FullScreenElement: 'msFullscreenElement',\n    FullScreenEnabled: 'msFullscreenEnabled',\n    RequestFullScreen: 'msRequestFullscreen',\n};\nvar isBrowser = typeof window !== 'undefined';\nvar vendor = isBrowser\n    ? (Api.FullScreenEnabled in document && defaultVendor) ||\n        (webkitVendor.FullScreenEnabled in document && webkitVendor) ||\n        (msVendor.FullScreenEnabled in document && msVendor) ||\n        defaultVendor\n    : defaultVendor;\nvar isFullScreenEnabled = function () {\n    return isBrowser && vendor.FullScreenEnabled in document && document[vendor.FullScreenEnabled] === true;\n};\nvar addFullScreenChangeListener = function (handler) {\n    if (isBrowser) {\n        document.addEventListener(vendor.FullScreenChange, handler);\n    }\n};\nvar removeFullScreenChangeListener = function (handler) {\n    if (isBrowser) {\n        document.removeEventListener(vendor.FullScreenChange, handler);\n    }\n};\nvar exitFullScreen = function (element) {\n    return isBrowser\n        ?\n            element[vendor.ExitFullScreen]()\n        : Promise.resolve({});\n};\nvar getFullScreenElement = function () {\n    return isBrowser ? document[vendor.FullScreenElement] : null;\n};\nvar requestFullScreen = function (element) {\n    if (isBrowser) {\n        element[vendor.RequestFullScreen]();\n    }\n};\n\nvar useDebounceCallback = function (callback, wait) {\n    var timeout = React__namespace.useRef();\n    var cleanup = function () {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    };\n    React__namespace.useEffect(function () {\n        return function () { return cleanup(); };\n    }, []);\n    return React__namespace.useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        cleanup();\n        timeout.current = setTimeout(function () {\n            callback.apply(void 0, args);\n        }, wait);\n    }, [callback, wait]);\n};\n\nvar useIsMounted = function () {\n    var isMountedRef = React__namespace.useRef(false);\n    React__namespace.useEffect(function () {\n        isMountedRef.current = true;\n        return function () {\n            isMountedRef.current = false;\n        };\n    }, []);\n    return isMountedRef;\n};\n\nvar usePrevious = function (value) {\n    var ref = React__namespace.useRef(value);\n    React__namespace.useEffect(function () {\n        ref.current = value;\n    }, [value]);\n    return ref.current;\n};\n\nvar PageRenderStatus;\n(function (PageRenderStatus) {\n    PageRenderStatus[\"NotRenderedYet\"] = \"NotRenderedYet\";\n    PageRenderStatus[\"Rendering\"] = \"Rendering\";\n    PageRenderStatus[\"Rendered\"] = \"Rendered\";\n})(PageRenderStatus || (PageRenderStatus = {}));\nvar OUT_OF_RANGE_VISIBILITY = -9999;\nvar useRenderQueue = function (_a) {\n    var doc = _a.doc;\n    var numPages = doc.numPages;\n    var docId = doc.loadingTask.docId;\n    var initialPageVisibilities = React__namespace.useMemo(function () {\n        return Array(numPages)\n            .fill(null)\n            .map(function (_, pageIndex) { return ({\n            pageIndex: pageIndex,\n            renderStatus: PageRenderStatus.NotRenderedYet,\n            visibility: OUT_OF_RANGE_VISIBILITY,\n        }); });\n    }, [docId]);\n    var latestRef = React__namespace.useRef({\n        currentRenderingPage: -1,\n        startRange: 0,\n        endRange: numPages - 1,\n        visibilities: initialPageVisibilities,\n    });\n    var markNotRendered = function () {\n        for (var i = 0; i < numPages; i++) {\n            latestRef.current.visibilities[i].renderStatus = PageRenderStatus.NotRenderedYet;\n        }\n    };\n    var markRendered = function (pageIndex) {\n        latestRef.current.visibilities[pageIndex].renderStatus = PageRenderStatus.Rendered;\n    };\n    var markRendering = function (pageIndex) {\n        if (latestRef.current.currentRenderingPage !== -1 &&\n            latestRef.current.currentRenderingPage !== pageIndex &&\n            latestRef.current.visibilities[latestRef.current.currentRenderingPage].renderStatus ===\n                PageRenderStatus.Rendering) {\n            latestRef.current.visibilities[latestRef.current.currentRenderingPage].renderStatus =\n                PageRenderStatus.NotRenderedYet;\n        }\n        latestRef.current.visibilities[pageIndex].renderStatus = PageRenderStatus.Rendering;\n        latestRef.current.currentRenderingPage = pageIndex;\n    };\n    var setRange = function (startIndex, endIndex) {\n        latestRef.current.startRange = startIndex;\n        latestRef.current.endRange = endIndex;\n        for (var i = 0; i < numPages; i++) {\n            if (i < startIndex || i > endIndex) {\n                latestRef.current.visibilities[i].visibility = OUT_OF_RANGE_VISIBILITY;\n                latestRef.current.visibilities[i].renderStatus = PageRenderStatus.NotRenderedYet;\n            }\n        }\n    };\n    var setOutOfRange = function (pageIndex) {\n        setVisibility(pageIndex, OUT_OF_RANGE_VISIBILITY);\n    };\n    var setVisibility = function (pageIndex, visibility) {\n        latestRef.current.visibilities[pageIndex].visibility = visibility;\n    };\n    var getHighestPriorityPage = function () {\n        var visiblePages = latestRef.current.visibilities\n            .slice(latestRef.current.startRange, latestRef.current.endRange + 1)\n            .filter(function (item) { return item.visibility > OUT_OF_RANGE_VISIBILITY; });\n        if (!visiblePages.length) {\n            return -1;\n        }\n        var firstVisiblePage = visiblePages[0].pageIndex;\n        var lastVisiblePage = visiblePages[visiblePages.length - 1].pageIndex;\n        var numVisiblePages = visiblePages.length;\n        for (var i = 0; i < numVisiblePages; i++) {\n            if (visiblePages[i].renderStatus === PageRenderStatus.Rendering) {\n                return -1;\n            }\n            if (visiblePages[i].renderStatus === PageRenderStatus.NotRenderedYet) {\n                return visiblePages[i].pageIndex;\n            }\n        }\n        if (lastVisiblePage + 1 < numPages &&\n            latestRef.current.visibilities[lastVisiblePage + 1].renderStatus !== PageRenderStatus.Rendered) {\n            return lastVisiblePage + 1;\n        }\n        else if (firstVisiblePage - 1 >= 0 &&\n            latestRef.current.visibilities[firstVisiblePage - 1].renderStatus !== PageRenderStatus.Rendered) {\n            return firstVisiblePage - 1;\n        }\n        return -1;\n    };\n    var isInRange = function (pageIndex) {\n        return pageIndex >= latestRef.current.startRange && pageIndex <= latestRef.current.endRange;\n    };\n    return {\n        getHighestPriorityPage: getHighestPriorityPage,\n        isInRange: isInRange,\n        markNotRendered: markNotRendered,\n        markRendered: markRendered,\n        markRendering: markRendering,\n        setOutOfRange: setOutOfRange,\n        setRange: setRange,\n        setVisibility: setVisibility,\n    };\n};\n\nvar core = {\n\taskingPassword: {\n\t\trequirePasswordToOpen: \"This document requires a password to open\",\n\t\tsubmit: \"Submit\"\n\t},\n\twrongPassword: {\n\t\ttryAgain: \"The password is wrong. Please try again\"\n\t},\n\tpageLabel: \"Page {{pageIndex}}\"\n};\nvar enUs = {\n\tcore: core\n};\n\nvar DefaultLocalization = enUs;\nvar LocalizationContext = React__namespace.createContext({\n    l10n: DefaultLocalization,\n    setL10n: function () { },\n});\n\nvar id = 0;\nvar uniqueId = function () { return id++; };\n\nvar useClickOutside = function (closeOnClickOutside, targetRef, onClickOutside) {\n    var clickHandler = function (e) {\n        var target = targetRef.current;\n        if (!target) {\n            return;\n        }\n        var clickedTarget = e.target;\n        if (clickedTarget instanceof Element && clickedTarget.shadowRoot) {\n            var paths = e.composedPath();\n            if (paths.length > 0 && !target.contains(paths[0])) {\n                onClickOutside();\n            }\n        }\n        else if (!target.contains(clickedTarget)) {\n            onClickOutside();\n        }\n    };\n    React__namespace.useEffect(function () {\n        if (!closeOnClickOutside) {\n            return;\n        }\n        var eventOptions = {\n            capture: true,\n        };\n        document.addEventListener('click', clickHandler, eventOptions);\n        return function () {\n            document.removeEventListener('click', clickHandler, eventOptions);\n        };\n    }, []);\n};\n\nvar useEscape = function (handler) {\n    var keyUpHandler = function (e) {\n        if (e.key === 'Escape') {\n            handler();\n        }\n    };\n    React__namespace.useEffect(function () {\n        document.addEventListener('keyup', keyUpHandler);\n        return function () {\n            document.removeEventListener('keyup', keyUpHandler);\n        };\n    }, []);\n};\n\nvar useLockScroll = function () {\n    React__namespace.useEffect(function () {\n        var originalStyle = window.getComputedStyle(document.body).overflow;\n        document.body.style.overflow = 'hidden';\n        return function () {\n            document.body.style.overflow = originalStyle;\n        };\n    }, []);\n};\n\nvar ModalBody = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, children = _a.children, closeOnClickOutside = _a.closeOnClickOutside, closeOnEscape = _a.closeOnEscape, onToggle = _a.onToggle;\n    var contentRef = React__namespace.useRef();\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    useLockScroll();\n    useEscape(function () {\n        if (contentRef.current && closeOnEscape) {\n            onToggle();\n        }\n    });\n    useClickOutside(closeOnClickOutside, contentRef, onToggle);\n    useIsomorphicLayoutEffect(function () {\n        var contentEle = contentRef.current;\n        if (!contentEle) {\n            return;\n        }\n        var maxHeight = document.body.clientHeight * 0.75;\n        if (contentEle.getBoundingClientRect().height >= maxHeight) {\n            contentEle.style.overflow = 'auto';\n            contentEle.style.maxHeight = \"\".concat(maxHeight, \"px\");\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { \"aria-modal\": \"true\", className: classNames({\n            'rpv-core__modal-body': true,\n            'rpv-core__modal-body--rtl': isRtl,\n        }), id: \"rpv-core__modal-body-\".concat(ariaControlsSuffix), ref: contentRef, role: \"dialog\", tabIndex: -1 }, children));\n};\n\nvar ModalOverlay = function (_a) {\n    var children = _a.children;\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__modal-overlay\" }, children);\n};\n\nexports.ToggleStatus = void 0;\n(function (ToggleStatus) {\n    ToggleStatus[\"Close\"] = \"Close\";\n    ToggleStatus[\"Open\"] = \"Open\";\n    ToggleStatus[\"Toggle\"] = \"Toggle\";\n})(exports.ToggleStatus || (exports.ToggleStatus = {}));\n\nvar useToggle = function (isOpened) {\n    var _a = React__namespace.useState(isOpened), opened = _a[0], setOpened = _a[1];\n    var toggle = function (status) {\n        switch (status) {\n            case exports.ToggleStatus.Close:\n                setOpened(false);\n                break;\n            case exports.ToggleStatus.Open:\n                setOpened(true);\n                break;\n            case exports.ToggleStatus.Toggle:\n            default:\n                setOpened(function (isOpened) { return !isOpened; });\n                break;\n        }\n    };\n    return { opened: opened, toggle: toggle };\n};\n\nvar Portal = function (_a) {\n    var content = _a.content, _b = _a.isOpened, isOpened = _b === void 0 ? false : _b, target = _a.target;\n    var _c = useToggle(isOpened), opened = _c.opened, toggle = _c.toggle;\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        target && target(toggle, opened),\n        opened && content(toggle)));\n};\n\nvar Modal = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, closeOnClickOutside = _a.closeOnClickOutside, closeOnEscape = _a.closeOnEscape, content = _a.content, _b = _a.isOpened, isOpened = _b === void 0 ? false : _b, target = _a.target;\n    var controlsSuffix = ariaControlsSuffix || \"\".concat(uniqueId());\n    var renderTarget = function (toggle, opened) { return (React__namespace.createElement(\"div\", { \"aria-expanded\": opened ? 'true' : 'false', \"aria-haspopup\": \"dialog\", \"aria-controls\": \"rpv-core__modal-body-\".concat(controlsSuffix) }, target(toggle, opened))); };\n    var renderContent = function (toggle) { return (React__namespace.createElement(ModalOverlay, null,\n        React__namespace.createElement(ModalBody, { ariaControlsSuffix: controlsSuffix, closeOnClickOutside: closeOnClickOutside, closeOnEscape: closeOnEscape, onToggle: toggle }, content(toggle)))); };\n    return React__namespace.createElement(Portal, { target: target ? renderTarget : null, content: renderContent, isOpened: isOpened });\n};\n\nexports.Position = void 0;\n(function (Position) {\n    Position[\"TopLeft\"] = \"TOP_LEFT\";\n    Position[\"TopCenter\"] = \"TOP_CENTER\";\n    Position[\"TopRight\"] = \"TOP_RIGHT\";\n    Position[\"RightTop\"] = \"RIGHT_TOP\";\n    Position[\"RightCenter\"] = \"RIGHT_CENTER\";\n    Position[\"RightBottom\"] = \"RIGHT_BOTTOM\";\n    Position[\"BottomLeft\"] = \"BOTTOM_LEFT\";\n    Position[\"BottomCenter\"] = \"BOTTOM_CENTER\";\n    Position[\"BottomRight\"] = \"BOTTOM_RIGHT\";\n    Position[\"LeftTop\"] = \"LEFT_TOP\";\n    Position[\"LeftCenter\"] = \"LEFT_CENTER\";\n    Position[\"LeftBottom\"] = \"LEFT_BOTTOM\";\n})(exports.Position || (exports.Position = {}));\n\nvar calculatePosition = function (content, target, position, offset) {\n    var targetRect = target.getBoundingClientRect();\n    var contentRect = content.getBoundingClientRect();\n    var height = contentRect.height, width = contentRect.width;\n    var top = 0;\n    var left = 0;\n    switch (position) {\n        case exports.Position.TopLeft:\n            top = targetRect.top - height;\n            left = targetRect.left;\n            break;\n        case exports.Position.TopCenter:\n            top = targetRect.top - height;\n            left = targetRect.left + targetRect.width / 2 - width / 2;\n            break;\n        case exports.Position.TopRight:\n            top = targetRect.top - height;\n            left = targetRect.left + targetRect.width - width;\n            break;\n        case exports.Position.RightTop:\n            top = targetRect.top;\n            left = targetRect.left + targetRect.width;\n            break;\n        case exports.Position.RightCenter:\n            top = targetRect.top + targetRect.height / 2 - height / 2;\n            left = targetRect.left + targetRect.width;\n            break;\n        case exports.Position.RightBottom:\n            top = targetRect.top + targetRect.height - height;\n            left = targetRect.left + targetRect.width;\n            break;\n        case exports.Position.BottomLeft:\n            top = targetRect.top + targetRect.height;\n            left = targetRect.left;\n            break;\n        case exports.Position.BottomCenter:\n            top = targetRect.top + targetRect.height;\n            left = targetRect.left + targetRect.width / 2 - width / 2;\n            break;\n        case exports.Position.BottomRight:\n            top = targetRect.top + targetRect.height;\n            left = targetRect.left + targetRect.width - width;\n            break;\n        case exports.Position.LeftTop:\n            top = targetRect.top;\n            left = targetRect.left - width;\n            break;\n        case exports.Position.LeftCenter:\n            top = targetRect.top + targetRect.height / 2 - height / 2;\n            left = targetRect.left - width;\n            break;\n        case exports.Position.LeftBottom:\n            top = targetRect.top + targetRect.height - height;\n            left = targetRect.left - width;\n            break;\n    }\n    return {\n        left: left + (offset.left || 0),\n        top: top + (offset.top || 0),\n    };\n};\n\nvar usePosition = function (contentRef, targetRef, anchorRef, position, offset) {\n    useIsomorphicLayoutEffect(function () {\n        var targetEle = targetRef.current;\n        var contentEle = contentRef.current;\n        var anchorEle = anchorRef.current;\n        if (!contentEle || !targetEle || !anchorEle) {\n            return;\n        }\n        var anchorRect = anchorEle.getBoundingClientRect();\n        var _a = calculatePosition(contentEle, targetEle, position, offset), top = _a.top, left = _a.left;\n        contentEle.style.top = \"\".concat(top - anchorRect.top, \"px\");\n        contentEle.style.left = \"\".concat(left - anchorRect.left, \"px\");\n    }, []);\n};\n\nvar Arrow = function (_a) {\n    var _b;\n    var customClassName = _a.customClassName, position = _a.position;\n    return (React__namespace.createElement(\"div\", { className: classNames((_b = {\n                'rpv-core__arrow': true,\n                'rpv-core__arrow--tl': position === exports.Position.TopLeft,\n                'rpv-core__arrow--tc': position === exports.Position.TopCenter,\n                'rpv-core__arrow--tr': position === exports.Position.TopRight,\n                'rpv-core__arrow--rt': position === exports.Position.RightTop,\n                'rpv-core__arrow--rc': position === exports.Position.RightCenter,\n                'rpv-core__arrow--rb': position === exports.Position.RightBottom,\n                'rpv-core__arrow--bl': position === exports.Position.BottomLeft,\n                'rpv-core__arrow--bc': position === exports.Position.BottomCenter,\n                'rpv-core__arrow--br': position === exports.Position.BottomRight,\n                'rpv-core__arrow--lt': position === exports.Position.LeftTop,\n                'rpv-core__arrow--lc': position === exports.Position.LeftCenter,\n                'rpv-core__arrow--lb': position === exports.Position.LeftBottom\n            },\n            _b[\"\".concat(customClassName)] = customClassName !== '',\n            _b)) }));\n};\n\nvar PopoverBody = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, children = _a.children, closeOnClickOutside = _a.closeOnClickOutside, offset = _a.offset, position = _a.position, targetRef = _a.targetRef, onClose = _a.onClose;\n    var contentRef = React__namespace.useRef();\n    var innerRef = React__namespace.useRef();\n    var anchorRef = React__namespace.useRef();\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    useClickOutside(closeOnClickOutside, contentRef, onClose);\n    usePosition(contentRef, targetRef, anchorRef, position, offset);\n    useIsomorphicLayoutEffect(function () {\n        var innerContentEle = innerRef.current;\n        if (!innerContentEle) {\n            return;\n        }\n        var maxHeight = document.body.clientHeight * 0.75;\n        if (innerContentEle.getBoundingClientRect().height >= maxHeight) {\n            innerContentEle.style.overflow = 'auto';\n            innerContentEle.style.maxHeight = \"\".concat(maxHeight, \"px\");\n        }\n    }, []);\n    var innerId = \"rpv-core__popover-body-inner-\".concat(ariaControlsSuffix);\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { ref: anchorRef, style: { left: 0, position: 'absolute', top: 0 } }),\n        React__namespace.createElement(\"div\", { \"aria-describedby\": innerId, className: classNames({\n                'rpv-core__popover-body': true,\n                'rpv-core__popover-body--rtl': isRtl,\n            }), id: \"rpv-core__popover-body-\".concat(ariaControlsSuffix), ref: contentRef, role: \"dialog\", tabIndex: -1 },\n            React__namespace.createElement(Arrow, { customClassName: \"rpv-core__popover-body-arrow\", position: position }),\n            React__namespace.createElement(\"div\", { id: innerId, ref: innerRef }, children))));\n};\n\nvar PopoverOverlay = function (_a) {\n    var closeOnEscape = _a.closeOnEscape, onClose = _a.onClose;\n    var containerRef = React__namespace.useRef();\n    useEscape(function () {\n        if (containerRef.current && closeOnEscape) {\n            onClose();\n        }\n    });\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__popover-overlay\", ref: containerRef });\n};\n\nvar Popover = function (_a) {\n    var _b = _a.ariaHasPopup, ariaHasPopup = _b === void 0 ? 'dialog' : _b, ariaControlsSuffix = _a.ariaControlsSuffix, closeOnClickOutside = _a.closeOnClickOutside, closeOnEscape = _a.closeOnEscape, content = _a.content, _c = _a.lockScroll, lockScroll = _c === void 0 ? true : _c, offset = _a.offset, position = _a.position, target = _a.target;\n    var _d = useToggle(false), opened = _d.opened, toggle = _d.toggle;\n    var targetRef = React__namespace.useRef();\n    var controlsSuffix = React__namespace.useMemo(function () { return ariaControlsSuffix || \"\".concat(uniqueId()); }, []);\n    return (React__namespace.createElement(\"div\", { ref: targetRef, \"aria-expanded\": opened ? 'true' : 'false', \"aria-haspopup\": ariaHasPopup, \"aria-controls\": \"rpv-core__popver-body-\".concat(controlsSuffix) },\n        target(toggle, opened),\n        opened && (React__namespace.createElement(React__namespace.Fragment, null,\n            lockScroll && React__namespace.createElement(PopoverOverlay, { closeOnEscape: closeOnEscape, onClose: toggle }),\n            React__namespace.createElement(PopoverBody, { ariaControlsSuffix: controlsSuffix, closeOnClickOutside: closeOnClickOutside, offset: offset, position: position, targetRef: targetRef, onClose: toggle }, content(toggle))))));\n};\n\nvar TooltipBody = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, children = _a.children, contentRef = _a.contentRef, offset = _a.offset, position = _a.position, targetRef = _a.targetRef;\n    var anchorRef = React__namespace.useRef();\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    usePosition(contentRef, targetRef, anchorRef, position, offset);\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { ref: anchorRef, style: { left: 0, position: 'absolute', top: 0 } }),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__tooltip-body': true,\n                'rpv-core__tooltip-body--rtl': isRtl,\n            }), id: \"rpv-core__tooltip-body-\".concat(ariaControlsSuffix), ref: contentRef, role: \"tooltip\" },\n            React__namespace.createElement(Arrow, { customClassName: \"rpv-core__tooltip-body-arrow\", position: position }),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__tooltip-body-content\" }, children))));\n};\n\nvar Tooltip = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, content = _a.content, offset = _a.offset, position = _a.position, target = _a.target;\n    var _b = useToggle(false), opened = _b.opened, toggle = _b.toggle;\n    var targetRef = React__namespace.useRef();\n    var contentRef = React__namespace.useRef();\n    var controlsSuffix = React__namespace.useMemo(function () { return ariaControlsSuffix || \"\".concat(uniqueId()); }, []);\n    useEscape(function () {\n        if (targetRef.current && document.activeElement && targetRef.current.contains(document.activeElement)) {\n            close();\n        }\n    });\n    var open = function () {\n        toggle(exports.ToggleStatus.Open);\n    };\n    var close = function () {\n        toggle(exports.ToggleStatus.Close);\n    };\n    var onBlur = function (e) {\n        var shouldHideTooltip = e.relatedTarget instanceof HTMLElement &&\n            e.currentTarget.parentElement &&\n            e.currentTarget.parentElement.contains(e.relatedTarget);\n        if (shouldHideTooltip) {\n            if (contentRef.current) {\n                contentRef.current.style.display = 'none';\n            }\n        }\n        else {\n            close();\n        }\n    };\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { ref: targetRef, \"aria-describedby\": \"rpv-core__tooltip-body-\".concat(controlsSuffix), onBlur: onBlur, onFocus: open, onMouseEnter: open, onMouseLeave: close }, target),\n        opened && (React__namespace.createElement(TooltipBody, { ariaControlsSuffix: controlsSuffix, contentRef: contentRef, offset: offset, position: position, targetRef: targetRef }, content()))));\n};\n\nfunction createStore(initialState) {\n    var state = initialState || {};\n    var listeners = {};\n    var update = function (key, data) {\n        var _a;\n        state = __assign(__assign({}, state), (_a = {}, _a[key] = data, _a));\n        (listeners[key] || []).forEach(function (handler) { return handler(state[key]); });\n    };\n    var get = function (key) { return state[key]; };\n    return {\n        subscribe: function (key, handler) {\n            listeners[key] = (listeners[key] || []).concat(handler);\n        },\n        unsubscribe: function (key, handler) {\n            listeners[key] = (listeners[key] || []).filter(function (f) { return f !== handler; });\n        },\n        update: function (key, data) {\n            update(key, data);\n        },\n        updateCurrentValue: function (key, updater) {\n            var currentValue = get(key);\n            if (currentValue !== undefined) {\n                update(key, updater(currentValue));\n            }\n        },\n        get: function (key) {\n            return get(key);\n        },\n    };\n}\n\nexports.FullScreenMode = void 0;\n(function (FullScreenMode) {\n    FullScreenMode[\"Normal\"] = \"Normal\";\n    FullScreenMode[\"Entering\"] = \"Entering\";\n    FullScreenMode[\"Entered\"] = \"Entered\";\n    FullScreenMode[\"EnteredCompletely\"] = \"EnteredCompletely\";\n    FullScreenMode[\"Exitting\"] = \"Exitting\";\n    FullScreenMode[\"Exited\"] = \"Exited\";\n})(exports.FullScreenMode || (exports.FullScreenMode = {}));\n\nexports.LayerRenderStatus = void 0;\n(function (LayerRenderStatus) {\n    LayerRenderStatus[LayerRenderStatus[\"PreRender\"] = 0] = \"PreRender\";\n    LayerRenderStatus[LayerRenderStatus[\"DidRender\"] = 1] = \"DidRender\";\n})(exports.LayerRenderStatus || (exports.LayerRenderStatus = {}));\n\nexports.PageMode = void 0;\n(function (PageMode) {\n    PageMode[\"Attachments\"] = \"UseAttachments\";\n    PageMode[\"Bookmarks\"] = \"UseOutlines\";\n    PageMode[\"ContentGroup\"] = \"UseOC\";\n    PageMode[\"Default\"] = \"UserNone\";\n    PageMode[\"FullScreen\"] = \"FullScreen\";\n    PageMode[\"Thumbnails\"] = \"UseThumbs\";\n})(exports.PageMode || (exports.PageMode = {}));\n\nexports.PasswordStatus = void 0;\n(function (PasswordStatus) {\n    PasswordStatus[\"RequiredPassword\"] = \"RequiredPassword\";\n    PasswordStatus[\"WrongPassword\"] = \"WrongPassword\";\n})(exports.PasswordStatus || (exports.PasswordStatus = {}));\n\nexports.RotateDirection = void 0;\n(function (RotateDirection) {\n    RotateDirection[\"Backward\"] = \"Backward\";\n    RotateDirection[\"Forward\"] = \"Forward\";\n})(exports.RotateDirection || (exports.RotateDirection = {}));\n\nexports.ScrollMode = void 0;\n(function (ScrollMode) {\n    ScrollMode[\"Page\"] = \"Page\";\n    ScrollMode[\"Horizontal\"] = \"Horizontal\";\n    ScrollMode[\"Vertical\"] = \"Vertical\";\n    ScrollMode[\"Wrapped\"] = \"Wrapped\";\n})(exports.ScrollMode || (exports.ScrollMode = {}));\n\nexports.SpecialZoomLevel = void 0;\n(function (SpecialZoomLevel) {\n    SpecialZoomLevel[\"ActualSize\"] = \"ActualSize\";\n    SpecialZoomLevel[\"PageFit\"] = \"PageFit\";\n    SpecialZoomLevel[\"PageWidth\"] = \"PageWidth\";\n})(exports.SpecialZoomLevel || (exports.SpecialZoomLevel = {}));\n\nexports.ViewMode = void 0;\n(function (ViewMode) {\n    ViewMode[\"DualPage\"] = \"DualPage\";\n    ViewMode[\"DualPageWithCover\"] = \"DualPageWithCover\";\n    ViewMode[\"SinglePage\"] = \"SinglePage\";\n})(exports.ViewMode || (exports.ViewMode = {}));\n\nvar chunk = function (arr, size) {\n    return arr.reduce(function (acc, e, i) { return (i % size ? acc[acc.length - 1].push(e) : acc.push([e]), acc); }, []);\n};\n\nvar isMac = function () { return (typeof window !== 'undefined' ? /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform) : false); };\n\nvar normalizeDestination = function (pageIndex, destArray) {\n    switch (destArray[1].name) {\n        case 'XYZ':\n            return {\n                bottomOffset: function (_, viewportHeight) {\n                    return destArray[3] === null ? viewportHeight : destArray[3];\n                },\n                leftOffset: function (_, __) { return (destArray[2] === null ? 0 : destArray[2]); },\n                pageIndex: pageIndex,\n                scaleTo: destArray[4],\n            };\n        case 'Fit':\n        case 'FitB':\n            return {\n                bottomOffset: 0,\n                leftOffset: 0,\n                pageIndex: pageIndex,\n                scaleTo: exports.SpecialZoomLevel.PageFit,\n            };\n        case 'FitH':\n        case 'FitBH':\n            return {\n                bottomOffset: destArray[2],\n                leftOffset: 0,\n                pageIndex: pageIndex,\n                scaleTo: exports.SpecialZoomLevel.PageWidth,\n            };\n        default:\n            return {\n                bottomOffset: 0,\n                leftOffset: 0,\n                pageIndex: pageIndex,\n                scaleTo: 1,\n            };\n    }\n};\nvar pageOutlinesMap = new Map();\nvar pagesMap = new Map();\nvar generateRefKey = function (doc, outline) {\n    return \"\".concat(doc.loadingTask.docId, \"___\").concat(outline.num, \"R\").concat(outline.gen === 0 ? '' : outline.gen);\n};\nvar getPageIndex = function (doc, outline) {\n    var key = generateRefKey(doc, outline);\n    return pageOutlinesMap.has(key) ? pageOutlinesMap.get(key) : null;\n};\nvar cacheOutlineRef = function (doc, outline, pageIndex) {\n    pageOutlinesMap.set(generateRefKey(doc, outline), pageIndex);\n};\nvar clearPagesCache = function () {\n    pageOutlinesMap.clear();\n    pagesMap.clear();\n};\nvar getPage = function (doc, pageIndex) {\n    if (!doc) {\n        return Promise.reject('The document is not loaded yet');\n    }\n    var pageKey = \"\".concat(doc.loadingTask.docId, \"___\").concat(pageIndex);\n    var page = pagesMap.get(pageKey);\n    if (page) {\n        return Promise.resolve(page);\n    }\n    return new Promise(function (resolve, _) {\n        doc.getPage(pageIndex + 1).then(function (page) {\n            pagesMap.set(pageKey, page);\n            if (page.ref) {\n                cacheOutlineRef(doc, page.ref, pageIndex);\n            }\n            resolve(page);\n        });\n    });\n};\nvar getDestination = function (doc, dest) {\n    return new Promise(function (res) {\n        new Promise(function (resolve) {\n            if (typeof dest === 'string') {\n                doc.getDestination(dest).then(function (destArray) {\n                    resolve(destArray);\n                });\n            }\n            else {\n                resolve(dest);\n            }\n        }).then(function (destArray) {\n            if ('object' === typeof destArray[0] && destArray[0] !== null) {\n                var outlineRef_1 = destArray[0];\n                var pageIndex = getPageIndex(doc, outlineRef_1);\n                if (pageIndex === null) {\n                    doc.getPageIndex(outlineRef_1).then(function (pageIndex) {\n                        cacheOutlineRef(doc, outlineRef_1, pageIndex);\n                        getDestination(doc, dest).then(function (result) { return res(result); });\n                    });\n                }\n                else {\n                    res(normalizeDestination(pageIndex, destArray));\n                }\n            }\n            else {\n                var target = normalizeDestination(destArray[0], destArray);\n                res(target);\n            }\n        });\n    });\n};\n\nvar useRunOnce = function (cb, condition) {\n    var isCalledRef = React__namespace.useRef(false);\n    useIsomorphicLayoutEffect(function () {\n        if (condition && !isCalledRef.current) {\n            isCalledRef.current = true;\n            cb();\n        }\n    }, [cb, condition]);\n};\n\nvar useTrackResize = function (_a) {\n    var targetRef = _a.targetRef, onResize = _a.onResize;\n    useIsomorphicLayoutEffect(function () {\n        var io = new ResizeObserver(function (entries) {\n            entries.forEach(function (entry) {\n                onResize(entry.target);\n            });\n        });\n        var container = targetRef.current;\n        if (!container) {\n            return;\n        }\n        io.observe(container);\n        return function () {\n            io.unobserve(container);\n        };\n    }, []);\n};\n\nvar AnnotationBorderStyleType;\n(function (AnnotationBorderStyleType) {\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Solid\"] = 1] = \"Solid\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Dashed\"] = 2] = \"Dashed\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Beveled\"] = 3] = \"Beveled\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Inset\"] = 4] = \"Inset\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Underline\"] = 5] = \"Underline\";\n})(AnnotationBorderStyleType || (AnnotationBorderStyleType = {}));\n\nvar dateRegex = new RegExp('^D:' +\n    '(\\\\d{4})' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '([Z|+|-])?' +\n    '(\\\\d{2})?' +\n    \"'?\" +\n    '(\\\\d{2})?' +\n    \"'?\");\nvar parse = function (value, min, max, defaultValue) {\n    var parsed = parseInt(value, 10);\n    return parsed >= min && parsed <= max ? parsed : defaultValue;\n};\nvar convertDate = function (input) {\n    var matches = dateRegex.exec(input);\n    if (!matches) {\n        return null;\n    }\n    var year = parseInt(matches[1], 10);\n    var month = parse(matches[2], 1, 12, 1) - 1;\n    var day = parse(matches[3], 1, 31, 1);\n    var hour = parse(matches[4], 0, 23, 0);\n    var minute = parse(matches[5], 0, 59, 0);\n    var second = parse(matches[6], 0, 59, 0);\n    var universalTimeRelation = matches[7] || 'Z';\n    var offsetHour = parse(matches[8], 0, 23, 0);\n    var offsetMinute = parse(matches[9], 0, 59, 0);\n    switch (universalTimeRelation) {\n        case '-':\n            hour += offsetHour;\n            minute += offsetMinute;\n            break;\n        case '+':\n            hour -= offsetHour;\n            minute -= offsetMinute;\n            break;\n    }\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n};\n\nvar getContents = function (annotation) {\n    return annotation.contentsObj ? annotation.contentsObj.str : annotation.contents || '';\n};\n\nvar getTitle = function (annotation) {\n    return annotation.titleObj ? annotation.titleObj.str : annotation.title || '';\n};\n\nvar PopupWrapper = function (_a) {\n    var annotation = _a.annotation;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var containerRef = React__namespace.useRef();\n    var dateStr = '';\n    if (annotation.modificationDate) {\n        var date = convertDate(annotation.modificationDate);\n        dateStr = date ? \"\".concat(date.toLocaleDateString(), \", \").concat(date.toLocaleTimeString()) : '';\n    }\n    React__namespace.useLayoutEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        var annotationEle = document.querySelector(\"[data-annotation-id=\\\"\".concat(annotation.id, \"\\\"]\"));\n        if (!annotationEle) {\n            return;\n        }\n        var ele = annotationEle;\n        ele.style.zIndex += 1;\n        return function () {\n            ele.style.zIndex = \"\".concat(parseInt(ele.style.zIndex, 10) - 1);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, className: classNames({\n            'rpv-core__annotation-popup-wrapper': true,\n            'rpv-core__annotation-popup-wrapper--rtl': isRtl,\n        }), style: {\n            top: annotation.annotationType === exports.AnnotationType.Popup ? '' : '100%',\n        } },\n        title && (React__namespace.createElement(React__namespace.Fragment, null,\n            React__namespace.createElement(\"div\", { className: classNames({\n                    'rpv-core__annotation-popup-title': true,\n                    'rpv-core__annotation-popup-title--ltr': !isRtl,\n                    'rpv-core__annotation-popup-title--rtl': isRtl,\n                }) }, title),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__annotation-popup-date\" }, dateStr))),\n        contents && (React__namespace.createElement(\"div\", { className: \"rpv-core__annotation-popup-content\" }, contents.split('\\n').map(function (item, index) { return (React__namespace.createElement(React__namespace.Fragment, { key: index },\n            item,\n            React__namespace.createElement(\"br\", null))); })))));\n};\n\nvar TogglePopupBy;\n(function (TogglePopupBy) {\n    TogglePopupBy[\"Click\"] = \"Click\";\n    TogglePopupBy[\"Hover\"] = \"Hover\";\n})(TogglePopupBy || (TogglePopupBy = {}));\nvar useTogglePopup = function () {\n    var _a = useToggle(false), opened = _a.opened, toggle = _a.toggle;\n    var _b = React__namespace.useState(TogglePopupBy.Hover), togglePopupBy = _b[0], setTooglePopupBy = _b[1];\n    var toggleOnClick = function () {\n        switch (togglePopupBy) {\n            case TogglePopupBy.Click:\n                opened && setTooglePopupBy(TogglePopupBy.Hover);\n                toggle(exports.ToggleStatus.Toggle);\n                break;\n            case TogglePopupBy.Hover:\n                setTooglePopupBy(TogglePopupBy.Click);\n                toggle(exports.ToggleStatus.Open);\n                break;\n        }\n    };\n    var openOnHover = function () {\n        togglePopupBy === TogglePopupBy.Hover && toggle(exports.ToggleStatus.Open);\n    };\n    var closeOnHover = function () {\n        togglePopupBy === TogglePopupBy.Hover && toggle(exports.ToggleStatus.Close);\n    };\n    return {\n        opened: opened,\n        closeOnHover: closeOnHover,\n        openOnHover: openOnHover,\n        toggleOnClick: toggleOnClick,\n    };\n};\n\nvar Annotation = function (_a) {\n    var annotation = _a.annotation, children = _a.children, ignoreBorder = _a.ignoreBorder, hasPopup = _a.hasPopup, isRenderable = _a.isRenderable, page = _a.page, viewport = _a.viewport;\n    var rect = annotation.rect;\n    var _b = useTogglePopup(), closeOnHover = _b.closeOnHover, opened = _b.opened, openOnHover = _b.openOnHover, toggleOnClick = _b.toggleOnClick;\n    var normalizeRect = function (r) { return [\n        Math.min(r[0], r[2]),\n        Math.min(r[1], r[3]),\n        Math.max(r[0], r[2]),\n        Math.max(r[1], r[3]),\n    ]; };\n    var bound = normalizeRect([\n        rect[0],\n        page.view[3] + page.view[1] - rect[1],\n        rect[2],\n        page.view[3] + page.view[1] - rect[3],\n    ]);\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var styles = {\n        borderColor: '',\n        borderRadius: '',\n        borderStyle: '',\n        borderWidth: '',\n    };\n    if (!ignoreBorder && annotation.borderStyle.width > 0) {\n        switch (annotation.borderStyle.style) {\n            case AnnotationBorderStyleType.Dashed:\n                styles.borderStyle = 'dashed';\n                break;\n            case AnnotationBorderStyleType.Solid:\n                styles.borderStyle = 'solid';\n                break;\n            case AnnotationBorderStyleType.Underline:\n                styles = Object.assign({\n                    borderBottomStyle: 'solid',\n                }, styles);\n                break;\n            case AnnotationBorderStyleType.Beveled:\n            case AnnotationBorderStyleType.Inset:\n        }\n        var borderWidth = annotation.borderStyle.width;\n        styles.borderWidth = \"\".concat(borderWidth, \"px\");\n        if (annotation.borderStyle.style !== AnnotationBorderStyleType.Underline) {\n            width = width - 2 * borderWidth;\n            height = height - 2 * borderWidth;\n        }\n        var _c = annotation.borderStyle, horizontalCornerRadius = _c.horizontalCornerRadius, verticalCornerRadius = _c.verticalCornerRadius;\n        if (horizontalCornerRadius > 0 || verticalCornerRadius > 0) {\n            styles.borderRadius = \"\".concat(horizontalCornerRadius, \"px / \").concat(verticalCornerRadius, \"px\");\n        }\n        annotation.color\n            ? (styles.borderColor = \"rgb(\".concat(annotation.color[0] | 0, \", \").concat(annotation.color[1] | 0, \", \").concat(annotation.color[2] | 0, \")\"))\n            :\n                (styles.borderWidth = '0');\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, isRenderable &&\n        children({\n            popup: {\n                opened: opened,\n                closeOnHover: closeOnHover,\n                openOnHover: openOnHover,\n                toggleOnClick: toggleOnClick,\n            },\n            slot: {\n                attrs: {\n                    style: Object.assign({\n                        height: \"\".concat(height, \"px\"),\n                        left: \"\".concat(bound[0], \"px\"),\n                        top: \"\".concat(bound[1], \"px\"),\n                        transform: \"matrix(\".concat(viewport.transform.join(','), \")\"),\n                        transformOrigin: \"-\".concat(bound[0], \"px -\").concat(bound[1], \"px\"),\n                        width: \"\".concat(width, \"px\"),\n                    }, styles),\n                },\n                children: React__namespace.createElement(React__namespace.Fragment, null, hasPopup && opened && React__namespace.createElement(PopupWrapper, { annotation: annotation })),\n            },\n        })));\n};\n\nvar Caret = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--caret\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar Circle = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--circle\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"circle\", { cy: height / 2, fill: \"none\", rx: width / 2 - borderWidth / 2, ry: height / 2 - borderWidth / 2, stroke: \"transparent\", strokeWidth: borderWidth || 1 })),\n        props.slot.children)); }));\n};\n\nvar getFileName = function (url) {\n    var str = url.split('/').pop();\n    return str ? str.split('#')[0].split('?')[0] : url;\n};\n\nvar downloadFile = function (url, data) {\n    var blobUrl = typeof data === 'string' ? '' : URL.createObjectURL(new Blob([data], { type: '' }));\n    var link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = blobUrl || url;\n    link.setAttribute('download', getFileName(url));\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    if (blobUrl) {\n        URL.revokeObjectURL(blobUrl);\n    }\n};\n\nvar FileAttachment = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var hasPopup = annotation.hasPopup === false && (!!title || !!contents);\n    var doubleClick = function () {\n        var file = annotation.file;\n        file && downloadFile(file.filename, file.content);\n    };\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: true, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--file-attachment\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onDoubleClick: doubleClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar FreeText = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--free-text\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar Popup = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(title || contents);\n    var ignoredParents = ['Circle', 'Ink', 'Line', 'Polygon', 'PolyLine', 'Square'];\n    var hasPopup = !annotation.parentType || ignoredParents.indexOf(annotation.parentType) !== -1;\n    useIsomorphicLayoutEffect(function () {\n        if (!annotation.parentId) {\n            return;\n        }\n        var parent = document.querySelector(\"[data-annotation-id=\\\"\".concat(annotation.parentId, \"\\\"]\"));\n        var container = document.querySelector(\"[data-annotation-id=\\\"\".concat(annotation.id, \"\\\"]\"));\n        if (!parent || !container) {\n            return;\n        }\n        var left = parseFloat(parent.style.left);\n        var top = parseFloat(parent.style.top) + parseFloat(parent.style.height);\n        container.style.left = \"\".concat(left, \"px\");\n        container.style.top = \"\".concat(top, \"px\");\n        container.style.transformOrigin = \"-\".concat(left, \"px -\").concat(top, \"px\");\n    }, []);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: false, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--popup\", \"data-annotation-id\": annotation.id }),\n        React__namespace.createElement(PopupWrapper, { annotation: annotation }))); }));\n};\n\nvar Highlight = function (_a) {\n    var annotation = _a.annotation, childAnnotation = _a.childAnnotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var hasQuadPoints = annotation.quadPoints && annotation.quadPoints.length > 0;\n    if (hasQuadPoints) {\n        var annotations = annotation.quadPoints.map(function (quadPoint) {\n            return Object.assign({}, annotation, {\n                rect: [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y],\n                quadPoints: [],\n            });\n        });\n        return (React__namespace.createElement(React__namespace.Fragment, null, annotations.map(function (ann, index) { return (React__namespace.createElement(Highlight, { key: index, annotation: ann, childAnnotation: childAnnotation, page: page, viewport: viewport })); })));\n    }\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--highlight\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children),\n        childAnnotation &&\n            childAnnotation.annotationType === exports.AnnotationType.Popup &&\n            props.popup.opened && React__namespace.createElement(Popup, { annotation: childAnnotation, page: page, viewport: viewport }))); }));\n};\n\nvar Ink = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--ink\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        annotation.inkLists && annotation.inkLists.length && (React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") }, annotation.inkLists.map(function (inkList, index) { return (React__namespace.createElement(\"polyline\", { key: index, fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, points: inkList.map(function (item) { return \"\".concat(item.x - rect[0], \",\").concat(rect[3] - item.y); }).join(' ') })); }))),\n        props.slot.children)); }));\n};\n\nvar Line = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--line\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"line\", { stroke: \"transparent\", strokeWidth: borderWidth || 1, x1: rect[2] - annotation.lineCoordinates[0], x2: rect[2] - annotation.lineCoordinates[2], y1: rect[3] - annotation.lineCoordinates[1], y2: rect[3] - annotation.lineCoordinates[3] })),\n        props.slot.children)); }));\n};\n\nvar INVALID_PROTOCOL = /^([^\\w]*)(javascript|data|vbscript)/im;\nvar HTML_ENTITIES = /&#(\\w+)(^\\w|;)?/g;\nvar CTRL_CHARS = /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\nvar URL_SCHEME = /^([^:]+):/gm;\nvar decodeHtmlEntities = function (str) { return str.replace(HTML_ENTITIES, function (_, dec) { return String.fromCharCode(dec); }); };\nvar sanitizeUrl = function (url, defaultUrl) {\n    if (defaultUrl === void 0) { defaultUrl = 'about:blank'; }\n    var result = decodeHtmlEntities(url || '')\n        .replace(CTRL_CHARS, '')\n        .trim();\n    if (!result) {\n        return defaultUrl;\n    }\n    var firstChar = result[0];\n    if (firstChar === '.' || firstChar === '/') {\n        return result;\n    }\n    var parsedUrlScheme = result.match(URL_SCHEME);\n    if (!parsedUrlScheme) {\n        return result;\n    }\n    var scheme = parsedUrlScheme[0];\n    return INVALID_PROTOCOL.test(scheme) ? defaultUrl : result;\n};\n\nvar Link = function (_a) {\n    var _b;\n    var annotation = _a.annotation, annotationContainerRef = _a.annotationContainerRef, doc = _a.doc, outlines = _a.outlines, page = _a.page, pageIndex = _a.pageIndex, scale = _a.scale, viewport = _a.viewport, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpFromLinkAnnotation = _a.onJumpFromLinkAnnotation, onJumpToDest = _a.onJumpToDest;\n    var elementRef = React__namespace.useRef();\n    var title = outlines && outlines.length && annotation.dest && typeof annotation.dest === 'string'\n        ? (_b = outlines.find(function (item) { return item.dest === annotation.dest; })) === null || _b === void 0 ? void 0 : _b.title\n        : '';\n    var link = function (e) {\n        e.preventDefault();\n        annotation.action\n            ? onExecuteNamedAction(annotation.action)\n            : getDestination(doc, annotation.dest).then(function (target) {\n                var element = elementRef.current;\n                var annotationContainer = annotationContainerRef.current;\n                if (element && annotationContainer) {\n                    var linkRect = element.getBoundingClientRect();\n                    annotationContainer.style.setProperty('height', '100%');\n                    annotationContainer.style.setProperty('width', '100%');\n                    var annotationLayerRect = annotationContainer.getBoundingClientRect();\n                    annotationContainer.style.removeProperty('height');\n                    annotationContainer.style.removeProperty('width');\n                    var leftOffset = (linkRect.left - annotationLayerRect.left) / scale;\n                    var bottomOffset = (annotationLayerRect.bottom - linkRect.bottom + linkRect.height) / scale;\n                    onJumpFromLinkAnnotation({\n                        bottomOffset: bottomOffset,\n                        label: title,\n                        leftOffset: leftOffset,\n                        pageIndex: pageIndex,\n                    });\n                }\n                onJumpToDest(target);\n            });\n    };\n    var isRenderable = !!(annotation.url || annotation.dest || annotation.action || annotation.unsafeUrl);\n    var attrs = {};\n    if (annotation.url || annotation.unsafeUrl) {\n        var targetUrl = sanitizeUrl(annotation.url || annotation.unsafeUrl, '');\n        if (targetUrl) {\n            attrs = {\n                'data-target': 'external',\n                href: targetUrl,\n                rel: 'noopener noreferrer nofollow',\n                target: annotation.newWindow ? '_blank' : '',\n                title: targetUrl,\n            };\n        }\n        else {\n            isRenderable = false;\n        }\n    }\n    else {\n        attrs = {\n            href: '',\n            'data-annotation-link': annotation.id,\n            onClick: link,\n        };\n    }\n    if (title) {\n        attrs = Object.assign({}, attrs, {\n            title: title,\n            'aria-label': title,\n        });\n    }\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: false, ignoreBorder: false, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--link\", \"data-annotation-id\": annotation.id, \"data-testid\": \"core__annotation--link-\".concat(annotation.id) }),\n        React__namespace.createElement(\"a\", __assign({ ref: elementRef }, attrs)))); }));\n};\n\nvar Polygon = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--polygon\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        annotation.vertices && annotation.vertices.length && (React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"polygon\", { fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, points: annotation.vertices\n                    .map(function (item) { return \"\".concat(item.x - rect[0], \",\").concat(rect[3] - item.y); })\n                    .join(' ') }))),\n        props.slot.children)); }));\n};\n\nvar Polyline = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--polyline\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        annotation.vertices && annotation.vertices.length && (React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"polyline\", { fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, points: annotation.vertices\n                    .map(function (item) { return \"\".concat(item.x - rect[0], \",\").concat(rect[3] - item.y); })\n                    .join(' ') }))),\n        props.slot.children)); }));\n};\n\nvar Square = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--square\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"rect\", { height: height - borderWidth, fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, x: borderWidth / 2, y: borderWidth / 2, width: width - borderWidth })),\n        props.slot.children)); }));\n};\n\nvar Squiggly = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--squiggly\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar Stamp = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--stamp\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar StrikeOut = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--strike-out\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar CommentIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M.5,16.5a1,1,0,0,0,1,1h2v4l4-4h15a1,1,0,0,0,1-1V3.5a1,1,0,0,0-1-1H1.5a1,1,0,0,0-1,1Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M7.25,9.75A.25.25,0,1,1,7,10a.25.25,0,0,1,.25-.25\" }),\n    React__namespace.createElement(\"path\", { d: \"M12,9.75a.25.25,0,1,1-.25.25A.25.25,0,0,1,12,9.75\" }),\n    React__namespace.createElement(\"path\", { d: \"M16.75,9.75a.25.25,0,1,1-.25.25.25.25,0,0,1,.25-.25\" }))); };\n\nvar HelpIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M0.500 12.001 A11.500 11.500 0 1 0 23.500 12.001 A11.500 11.500 0 1 0 0.500 12.001 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M6.000 12.001 A6.000 6.000 0 1 0 18.000 12.001 A6.000 6.000 0 1 0 6.000 12.001 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M21.423 5.406L17.415 9.414\" }),\n    React__namespace.createElement(\"path\", { d: \"M14.587 6.585L18.607 2.565\" }),\n    React__namespace.createElement(\"path\", { d: \"M5.405 21.424L9.413 17.416\" }),\n    React__namespace.createElement(\"path\", { d: \"M6.585 14.588L2.577 18.596\" }),\n    React__namespace.createElement(\"path\", { d: \"M18.602 21.419L14.595 17.412\" }),\n    React__namespace.createElement(\"path\", { d: \"M17.419 14.58L21.428 18.589\" }),\n    React__namespace.createElement(\"path\", { d: \"M2.582 5.399L6.588 9.406\" }),\n    React__namespace.createElement(\"path\", { d: \"M9.421 6.581L5.412 2.572\" }))); };\n\nvar KeyIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M4.000 18.500 A1.500 1.500 0 1 0 7.000 18.500 A1.500 1.500 0 1 0 4.000 18.500 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M20.5.5l-9.782,9.783a7,7,0,1,0,3,3L17,10h1.5V8.5L19,8h1.5V6.5L21,6h1.5V4.5l1-1V.5Z\" }))); };\n\nvar NoteIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M2.000 2.500 L22.000 2.500 L22.000 23.500 L2.000 23.500 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M6 4.5L6 0.5\" }),\n    React__namespace.createElement(\"path\", { d: \"M18 4.5L18 0.5\" }),\n    React__namespace.createElement(\"path\", { d: \"M10 4.5L10 0.5\" }),\n    React__namespace.createElement(\"path\", { d: \"M14 4.5L14 0.5\" }))); };\n\nvar ParagraphIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M17.5 0.498L17.5 23.498\" }),\n    React__namespace.createElement(\"path\", { d: \"M10.5 0.498L10.5 23.498\" }),\n    React__namespace.createElement(\"path\", { d: \"M23.5.5H6.5a6,6,0,0,0,0,12h4\" }))); };\n\nvar TriangleIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M2.5 22.995L12 6.005 21.5 22.995 2.5 22.995z\" }))); };\n\nvar Text = function (_a) {\n    var annotation = _a.annotation, childAnnotation = _a.childAnnotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    var name = annotation.name ? annotation.name.toLowerCase() : '';\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: false, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--text\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n            name && (React__namespace.createElement(\"div\", { className: \"rpv-core__annotation-text-icon\" },\n                name === 'check' && React__namespace.createElement(CheckIcon, null),\n                name === 'comment' && React__namespace.createElement(CommentIcon, null),\n                name === 'help' && React__namespace.createElement(HelpIcon, null),\n                name === 'insert' && React__namespace.createElement(TriangleIcon, null),\n                name === 'key' && React__namespace.createElement(KeyIcon, null),\n                name === 'note' && React__namespace.createElement(NoteIcon, null),\n                (name === 'newparagraph' || name === 'paragraph') && React__namespace.createElement(ParagraphIcon, null))),\n            props.slot.children),\n        childAnnotation &&\n            childAnnotation.annotationType === exports.AnnotationType.Popup &&\n            props.popup.opened && React__namespace.createElement(Popup, { annotation: childAnnotation, page: page, viewport: viewport }))); }));\n};\n\nvar Underline = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var title = getTitle(annotation);\n    var contents = getContents(annotation);\n    var isRenderable = !!(annotation.hasPopup || title || contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--underline\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar AnnotationLayerBody = function (_a) {\n    var annotations = _a.annotations, doc = _a.doc, outlines = _a.outlines, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpFromLinkAnnotation = _a.onJumpFromLinkAnnotation, onJumpToDest = _a.onJumpToDest;\n    var containerRef = React__namespace.useRef();\n    var viewport = page.getViewport({ rotation: rotation, scale: scale });\n    var clonedViewPort = viewport.clone({ dontFlip: true });\n    var filterAnnotations = annotations.filter(function (annotation) { return !annotation.parentId; });\n    useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        plugins.forEach(function (plugin) {\n            if (plugin.onAnnotationLayerRender) {\n                plugin.onAnnotationLayerRender({\n                    annotations: filterAnnotations,\n                    container: container,\n                    pageIndex: pageIndex,\n                    rotation: rotation,\n                    scale: scale,\n                });\n            }\n        });\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, className: \"rpv-core__annotation-layer\", \"data-testid\": \"core__annotation-layer-\".concat(pageIndex) }, filterAnnotations.map(function (annotation) {\n        var childAnnotation = annotations.find(function (item) { return item.parentId === annotation.id; });\n        switch (annotation.annotationType) {\n            case exports.AnnotationType.Caret:\n                return (React__namespace.createElement(Caret, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Circle:\n                return (React__namespace.createElement(Circle, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.FileAttachment:\n                return (React__namespace.createElement(FileAttachment, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.FreeText:\n                return (React__namespace.createElement(FreeText, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Highlight:\n                return (React__namespace.createElement(Highlight, { key: annotation.id, annotation: annotation, childAnnotation: childAnnotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Ink:\n                return (React__namespace.createElement(Ink, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Line:\n                return (React__namespace.createElement(Line, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Link:\n                return (React__namespace.createElement(Link, { key: annotation.id, annotation: annotation, annotationContainerRef: containerRef, doc: doc, outlines: outlines, page: page, pageIndex: pageIndex, scale: scale, viewport: clonedViewPort, onExecuteNamedAction: onExecuteNamedAction, onJumpFromLinkAnnotation: onJumpFromLinkAnnotation, onJumpToDest: onJumpToDest }));\n            case exports.AnnotationType.Polygon:\n                return (React__namespace.createElement(Polygon, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Polyline:\n                return (React__namespace.createElement(Polyline, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Popup:\n                return (React__namespace.createElement(Popup, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Square:\n                return (React__namespace.createElement(Square, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Squiggly:\n                return (React__namespace.createElement(Squiggly, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Stamp:\n                return (React__namespace.createElement(Stamp, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.StrikeOut:\n                return (React__namespace.createElement(StrikeOut, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Text:\n                return (React__namespace.createElement(Text, { key: annotation.id, annotation: annotation, childAnnotation: childAnnotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Underline:\n                return (React__namespace.createElement(Underline, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            default:\n                return React__namespace.createElement(React__namespace.Fragment, { key: annotation.id });\n        }\n    })));\n};\n\nvar AnnotationLoader = function (_a) {\n    var page = _a.page, renderAnnotations = _a.renderAnnotations;\n    var isMounted = useIsMounted();\n    var _b = React__namespace.useState({\n        loading: true,\n        annotations: [],\n    }), status = _b[0], setStatus = _b[1];\n    React__namespace.useEffect(function () {\n        page.getAnnotations({ intent: 'display' }).then(function (result) {\n            if (isMounted.current) {\n                setStatus({\n                    loading: false,\n                    annotations: result,\n                });\n            }\n        });\n    }, []);\n    return status.loading ? React__namespace.createElement(React__namespace.Fragment, null) : renderAnnotations(status.annotations);\n};\n\nvar AnnotationLayer = function (_a) {\n    var doc = _a.doc, outlines = _a.outlines, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpFromLinkAnnotation = _a.onJumpFromLinkAnnotation, onJumpToDest = _a.onJumpToDest;\n    var renderAnnotations = function (annotations) { return (React__namespace.createElement(AnnotationLayerBody, { annotations: annotations, doc: doc, outlines: outlines, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotation, scale: scale, onExecuteNamedAction: onExecuteNamedAction, onJumpFromLinkAnnotation: onJumpFromLinkAnnotation, onJumpToDest: onJumpToDest })); };\n    return React__namespace.createElement(AnnotationLoader, { page: page, renderAnnotations: renderAnnotations });\n};\n\nvar floatToRatio = function (x, limit) {\n    var _a, _b;\n    if (Math.floor(x) === x) {\n        return [x, 1];\n    }\n    var y = 1 / x;\n    if (y > limit) {\n        return [1, limit];\n    }\n    if (Math.floor(y) === y) {\n        return [1, y];\n    }\n    var value = x > 1 ? y : x;\n    var a = 0;\n    var b = 1;\n    var c = 1;\n    var d = 1;\n    while (true) {\n        var numerator = a + c;\n        var denominator = b + d;\n        if (denominator > limit) {\n            break;\n        }\n        value <= numerator / denominator ? (_a = [numerator, denominator], c = _a[0], d = _a[1], _a) : (_b = [numerator, denominator], a = _b[0], b = _b[1], _b);\n    }\n    var middle = (a / b + c / d) / 2;\n    return value < middle ? (value === x ? [a, b] : [b, a]) : value === x ? [c, d] : [d, c];\n};\n\nvar roundToDivide = function (a, b) {\n    var remainder = a % b;\n    return remainder === 0 ? a : Math.floor(a - remainder);\n};\n\nvar MAX_CANVAS_SIZE = 4096 * 4096;\nvar CanvasLayer = function (_a) {\n    var canvasLayerRef = _a.canvasLayerRef, height = _a.height, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, width = _a.width, onRenderCanvasCompleted = _a.onRenderCanvasCompleted;\n    var renderTask = React__namespace.useRef();\n    useIsomorphicLayoutEffect(function () {\n        var task = renderTask.current;\n        if (task) {\n            task.cancel();\n        }\n        var canvasEle = canvasLayerRef.current;\n        canvasEle.removeAttribute('data-testid');\n        plugins.forEach(function (plugin) {\n            if (plugin.onCanvasLayerRender) {\n                plugin.onCanvasLayerRender({\n                    ele: canvasEle,\n                    pageIndex: pageIndex,\n                    rotation: rotation,\n                    scale: scale,\n                    status: exports.LayerRenderStatus.PreRender,\n                });\n            }\n        });\n        var viewport = page.getViewport({\n            rotation: rotation,\n            scale: scale,\n        });\n        var outputScale = window.devicePixelRatio || 1;\n        var maxScale = Math.sqrt(MAX_CANVAS_SIZE / (viewport.width * viewport.height));\n        var shouldScaleByCSS = outputScale > maxScale;\n        shouldScaleByCSS ? (canvasEle.style.transform = \"scale(1, 1)\") : canvasEle.style.removeProperty('transform');\n        var possibleScale = Math.min(maxScale, outputScale);\n        var _a = floatToRatio(possibleScale, 8), x = _a[0], y = _a[1];\n        canvasEle.width = roundToDivide(viewport.width * possibleScale, x);\n        canvasEle.height = roundToDivide(viewport.height * possibleScale, x);\n        canvasEle.style.width = \"\".concat(roundToDivide(viewport.width, y), \"px\");\n        canvasEle.style.height = \"\".concat(roundToDivide(viewport.height, y), \"px\");\n        canvasEle.hidden = true;\n        var canvasContext = canvasEle.getContext('2d', { alpha: false });\n        var transform = shouldScaleByCSS || outputScale !== 1 ? [possibleScale, 0, 0, possibleScale, 0, 0] : null;\n        renderTask.current = page.render({ canvasContext: canvasContext, transform: transform, viewport: viewport });\n        renderTask.current.promise.then(function () {\n            canvasEle.hidden = false;\n            canvasEle.setAttribute('data-testid', \"core__canvas-layer-\".concat(pageIndex));\n            plugins.forEach(function (plugin) {\n                if (plugin.onCanvasLayerRender) {\n                    plugin.onCanvasLayerRender({\n                        ele: canvasEle,\n                        pageIndex: pageIndex,\n                        rotation: rotation,\n                        scale: scale,\n                        status: exports.LayerRenderStatus.DidRender,\n                    });\n                }\n            });\n            onRenderCanvasCompleted();\n        }, function () {\n            onRenderCanvasCompleted();\n        });\n        return function () {\n            if (canvasEle) {\n                canvasEle.width = 0;\n                canvasEle.height = 0;\n            }\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-core__canvas-layer\", style: {\n            height: \"\".concat(height, \"px\"),\n            width: \"\".concat(width, \"px\"),\n        } },\n        React__namespace.createElement(\"canvas\", { ref: canvasLayerRef })));\n};\n\nvar SvgLayer = function (_a) {\n    var height = _a.height, page = _a.page, rotation = _a.rotation, scale = _a.scale, width = _a.width;\n    var containerRef = React__namespace.useRef();\n    var empty = function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        containerEle.innerHTML = '';\n    };\n    useIsomorphicLayoutEffect(function () {\n        var containerEle = containerRef.current;\n        var viewport = page.getViewport({ rotation: rotation, scale: scale });\n        page.getOperatorList().then(function (operatorList) {\n            empty();\n            var graphic = new PdfJsApi__namespace.SVGGraphics(page.commonObjs, page.objs);\n            graphic.getSVG(operatorList, viewport).then(function (svg) {\n                svg.style.height = \"\".concat(height, \"px\");\n                svg.style.width = \"\".concat(width, \"px\");\n                containerEle.appendChild(svg);\n            });\n        });\n    }, []);\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__svg-layer\", ref: containerRef });\n};\n\nvar TextLayer = function (_a) {\n    var containerRef = _a.containerRef, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, onRenderTextCompleted = _a.onRenderTextCompleted;\n    var renderTask = React__namespace.useRef();\n    var empty = function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        var spans = [].slice.call(containerEle.querySelectorAll('.rpv-core__text-layer-text'));\n        spans.forEach(function (span) { return containerEle.removeChild(span); });\n        var breaks = [].slice.call(containerEle.querySelectorAll('br[role=\"presentation\"]'));\n        breaks.forEach(function (br) { return containerEle.removeChild(br); });\n    };\n    useIsomorphicLayoutEffect(function () {\n        var task = renderTask.current;\n        if (task) {\n            task.cancel();\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        containerEle.removeAttribute('data-testid');\n        var viewport = page.getViewport({ rotation: rotation, scale: scale });\n        plugins.forEach(function (plugin) {\n            if (plugin.onTextLayerRender) {\n                plugin.onTextLayerRender({\n                    ele: containerEle,\n                    pageIndex: pageIndex,\n                    scale: scale,\n                    status: exports.LayerRenderStatus.PreRender,\n                });\n            }\n        });\n        page.getTextContent().then(function (textContent) {\n            empty();\n            renderTask.current = PdfJsApi__namespace.renderTextLayer({\n                container: containerEle,\n                textContent: textContent,\n                textContentSource: textContent,\n                viewport: viewport,\n            });\n            renderTask.current.promise.then(function () {\n                containerEle.setAttribute('data-testid', \"core__text-layer-\".concat(pageIndex));\n                var spans = [].slice.call(containerEle.children);\n                spans.forEach(function (span) {\n                    if (!span.classList.contains('rpv-core__text-layer-text--not')) {\n                        span.classList.add('rpv-core__text-layer-text');\n                    }\n                });\n                plugins.forEach(function (plugin) {\n                    if (plugin.onTextLayerRender) {\n                        plugin.onTextLayerRender({\n                            ele: containerEle,\n                            pageIndex: pageIndex,\n                            scale: scale,\n                            status: exports.LayerRenderStatus.DidRender,\n                        });\n                    }\n                });\n                onRenderTextCompleted();\n            }, function () {\n                containerEle.removeAttribute('data-testid');\n                onRenderTextCompleted();\n            });\n        });\n        return function () {\n            var _a;\n            empty();\n            (_a = renderTask.current) === null || _a === void 0 ? void 0 : _a.cancel();\n        };\n    }, []);\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__text-layer\", ref: containerRef });\n};\n\nvar PageLayer = function (_a) {\n    var doc = _a.doc, measureRef = _a.measureRef, outlines = _a.outlines, pageIndex = _a.pageIndex, pageRotation = _a.pageRotation, pageSize = _a.pageSize, plugins = _a.plugins, renderPage = _a.renderPage, renderQueueKey = _a.renderQueueKey, rotation = _a.rotation, scale = _a.scale, shouldRender = _a.shouldRender, viewMode = _a.viewMode, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpFromLinkAnnotation = _a.onJumpFromLinkAnnotation, onJumpToDest = _a.onJumpToDest, onRenderCompleted = _a.onRenderCompleted, onRotatePage = _a.onRotatePage;\n    var isMounted = useIsMounted();\n    var _b = React__namespace.useState(null), page = _b[0], setPage = _b[1];\n    var _c = React__namespace.useState(false), canvasLayerRendered = _c[0], setCanvasLayerRendered = _c[1];\n    var _d = React__namespace.useState(false), textLayerRendered = _d[0], setTextLayerRendered = _d[1];\n    var canvasLayerRef = React__namespace.useRef();\n    var textLayerRef = React__namespace.useRef();\n    var isVertical = Math.abs(rotation + pageRotation) % 180 === 0;\n    var scaledWidth = pageSize.pageWidth * scale;\n    var scaledHeight = pageSize.pageHeight * scale;\n    var w = isVertical ? scaledWidth : scaledHeight;\n    var h = isVertical ? scaledHeight : scaledWidth;\n    var rotationValue = (pageSize.rotation + rotation + pageRotation) % 360;\n    var renderQueueKeyRef = React__namespace.useRef(0);\n    var determinePageInstance = function () {\n        getPage(doc, pageIndex).then(function (pdfPage) {\n            if (isMounted.current) {\n                renderQueueKeyRef.current = renderQueueKey;\n                setPage(pdfPage);\n            }\n        });\n    };\n    var defaultPageRenderer = function (props) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        props.canvasLayer.children,\n        props.textLayer.children,\n        props.annotationLayer.children)); };\n    var renderPageLayer = renderPage || defaultPageRenderer;\n    var handleRenderCanvasCompleted = function () {\n        if (isMounted.current) {\n            setCanvasLayerRendered(true);\n        }\n    };\n    var handleRenderTextCompleted = function () {\n        if (isMounted.current) {\n            setTextLayerRendered(true);\n        }\n    };\n    React__namespace.useEffect(function () {\n        setPage(null);\n        setCanvasLayerRendered(false);\n        setTextLayerRendered(false);\n    }, [pageRotation, rotation, scale]);\n    React__namespace.useEffect(function () {\n        if (shouldRender && isMounted.current && !page) {\n            determinePageInstance();\n        }\n    }, [shouldRender, page]);\n    React__namespace.useEffect(function () {\n        if (canvasLayerRendered && textLayerRendered) {\n            if (renderQueueKey !== renderQueueKeyRef.current) {\n                setPage(null);\n                setCanvasLayerRendered(false);\n                setTextLayerRendered(false);\n            }\n            else {\n                onRenderCompleted(pageIndex);\n            }\n        }\n    }, [canvasLayerRendered, textLayerRendered]);\n    return (React__namespace.createElement(\"div\", { className: classNames({\n            'rpv-core__page-layer': true,\n            'rpv-core__page-layer--dual': viewMode === exports.ViewMode.DualPage,\n            'rpv-core__page-layer--dual-cover': viewMode === exports.ViewMode.DualPageWithCover,\n            'rpv-core__page-layer--single': viewMode === exports.ViewMode.SinglePage,\n        }), \"data-testid\": \"core__page-layer-\".concat(pageIndex), ref: measureRef, style: {\n            height: \"\".concat(h, \"px\"),\n            width: \"\".concat(w, \"px\"),\n        } }, !page ? (React__namespace.createElement(Spinner, { testId: \"core__page-layer-loading-\".concat(pageIndex) })) : (React__namespace.createElement(React__namespace.Fragment, null,\n        renderPageLayer({\n            annotationLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(AnnotationLayer, { doc: doc, outlines: outlines, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotationValue, scale: scale, onExecuteNamedAction: onExecuteNamedAction, onJumpFromLinkAnnotation: onJumpFromLinkAnnotation, onJumpToDest: onJumpToDest })),\n            },\n            canvasLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(CanvasLayer, { canvasLayerRef: canvasLayerRef, height: h, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotationValue, scale: scale, width: w, onRenderCanvasCompleted: handleRenderCanvasCompleted })),\n            },\n            canvasLayerRendered: canvasLayerRendered,\n            doc: doc,\n            height: h,\n            pageIndex: pageIndex,\n            rotation: rotationValue,\n            scale: scale,\n            svgLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(SvgLayer, { height: h, page: page, rotation: rotationValue, scale: scale, width: w })),\n            },\n            textLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(TextLayer, { containerRef: textLayerRef, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotationValue, scale: scale, onRenderTextCompleted: handleRenderTextCompleted })),\n            },\n            textLayerRendered: textLayerRendered,\n            width: w,\n            markRendered: onRenderCompleted,\n            onRotatePage: function (direction) { return onRotatePage(pageIndex, direction); },\n        }),\n        plugins.map(function (plugin, idx) {\n            return plugin.renderPageLayer ? (React__namespace.createElement(React__namespace.Fragment, { key: idx }, plugin.renderPageLayer({\n                canvasLayerRef: canvasLayerRef,\n                canvasLayerRendered: canvasLayerRendered,\n                doc: doc,\n                height: h,\n                pageIndex: pageIndex,\n                rotation: rotationValue,\n                scale: scale,\n                textLayerRef: textLayerRef,\n                textLayerRendered: textLayerRendered,\n                width: w,\n            }))) : (React__namespace.createElement(React__namespace.Fragment, { key: idx }));\n        })))));\n};\n\nvar getFileExt = function (url) {\n    var str = url.split(/\\./).pop();\n    return str ? str.toLowerCase() : '';\n};\n\nvar rectReducer = function (state, action) {\n    var rect = action.rect;\n    return state.height !== rect.height || state.width !== rect.width ? rect : state;\n};\nvar useMeasureRect = function (_a) {\n    var elementRef = _a.elementRef;\n    var _b = React__namespace.useState(elementRef.current), element = _b[0], setElement = _b[1];\n    var initializedRectRef = React__namespace.useRef(false);\n    var _c = React__namespace.useReducer(rectReducer, { height: 0, width: 0 }), rect = _c[0], dispatch = _c[1];\n    useIsomorphicLayoutEffect(function () {\n        if (elementRef.current !== element) {\n            setElement(elementRef.current);\n        }\n    });\n    useIsomorphicLayoutEffect(function () {\n        if (element && !initializedRectRef.current) {\n            initializedRectRef.current = true;\n            var _a = element.getBoundingClientRect(), height = _a.height, width = _a.width;\n            dispatch({\n                rect: { height: height, width: width },\n            });\n        }\n    }, [element]);\n    React__namespace.useEffect(function () {\n        if (!element) {\n            return;\n        }\n        var tracker = new ResizeObserver(function (entries, __) {\n            entries.forEach(function (entry) {\n                if (entry.target === element) {\n                    var _a = entry.contentRect, height = _a.height, width = _a.width;\n                    dispatch({\n                        rect: { height: height, width: width },\n                    });\n                }\n            });\n        });\n        tracker.observe(element);\n        return function () {\n            tracker.unobserve(element);\n        };\n    }, [element]);\n    return rect;\n};\n\nvar ScrollDirection;\n(function (ScrollDirection) {\n    ScrollDirection[\"Horizontal\"] = \"Horizontal\";\n    ScrollDirection[\"Vertical\"] = \"Vertical\";\n    ScrollDirection[\"Both\"] = \"Both\";\n})(ScrollDirection || (ScrollDirection = {}));\n\nvar easeOutQuart = function (t) { return 1 - Math.pow(1 - t, 4); };\n\nvar EPS = 0.0001;\nvar smoothScroll = function (ele, scrollDirection, targetPosition, duration, easing, onReachTarget) {\n    if (easing === void 0) { easing = function (t) { return t; }; }\n    if (onReachTarget === void 0) { onReachTarget = function () { }; }\n    var top = 0;\n    var left = 0;\n    var reachTarget = false;\n    switch (scrollDirection) {\n        case ScrollDirection.Horizontal:\n            left = ele.scrollLeft;\n            top = 0;\n        case ScrollDirection.Both:\n            left = ele.scrollLeft;\n            top = ele.scrollTop;\n            break;\n        case ScrollDirection.Vertical:\n        default:\n            left = 0;\n            top = ele.scrollTop;\n            break;\n    }\n    var markTargetReached = function () {\n        if (!reachTarget) {\n            reachTarget = true;\n            ele.scrollLeft = targetPosition.left;\n            ele.scrollTop = targetPosition.top;\n            onReachTarget();\n        }\n    };\n    if (Math.abs(top - targetPosition.top) <= EPS && scrollDirection === ScrollDirection.Vertical) {\n        markTargetReached();\n        return;\n    }\n    if (Math.abs(left - targetPosition.left) <= EPS && scrollDirection === ScrollDirection.Horizontal) {\n        markTargetReached();\n        return;\n    }\n    var startTime = -1;\n    var requestId;\n    var offset = {\n        left: left - targetPosition.left,\n        top: top - targetPosition.top,\n    };\n    var loop = function (currentTime) {\n        if (startTime === -1) {\n            startTime = currentTime;\n        }\n        var time = currentTime - startTime;\n        var percent = Math.min(time / duration, 1);\n        var easedPercent = easing(percent);\n        var updatePosition = {\n            left: left - offset.left * easedPercent,\n            top: top - offset.top * easedPercent,\n        };\n        switch (scrollDirection) {\n            case ScrollDirection.Horizontal:\n                ele.scrollLeft = updatePosition.left;\n                break;\n            case ScrollDirection.Both:\n                ele.scrollLeft = updatePosition.left;\n                ele.scrollTop = updatePosition.top;\n                break;\n            case ScrollDirection.Vertical:\n            default:\n                ele.scrollTop = updatePosition.top;\n                break;\n        }\n        if (Math.abs(updatePosition.top - targetPosition.top) <= EPS &&\n            Math.abs(updatePosition.left - targetPosition.left) <= EPS &&\n            !reachTarget) {\n            window.cancelAnimationFrame(requestId);\n            markTargetReached();\n        }\n        if (time < duration) {\n            requestId = window.requestAnimationFrame(loop);\n        }\n        else {\n            window.cancelAnimationFrame(requestId);\n        }\n    };\n    requestId = window.requestAnimationFrame(loop);\n};\n\nvar ZERO_OFFSET$6 = {\n    left: 0,\n    top: 0,\n};\nvar SCROLL_EVENT_OPTIONS = {\n    capture: false,\n    passive: true,\n};\nvar SCROLL_DURATION = 400;\nvar useScroll = function (_a) {\n    var elementRef = _a.elementRef, enableSmoothScroll = _a.enableSmoothScroll, isRtl = _a.isRtl, scrollDirection = _a.scrollDirection, onSmoothScroll = _a.onSmoothScroll;\n    var _b = React__namespace.useState(ZERO_OFFSET$6), scrollOffset = _b[0], setScrollOffset = _b[1];\n    var _c = React__namespace.useState(elementRef.current), element = _c[0], setElement = _c[1];\n    var factor = isRtl ? -1 : 1;\n    var latestRef = React__namespace.useRef(scrollDirection);\n    latestRef.current = scrollDirection;\n    var latestOffsetRef = React__namespace.useRef(ZERO_OFFSET$6);\n    var isSmoothScrollingDoneRef = React__namespace.useRef(true);\n    var handleSmoothScrollingComplete = React__namespace.useCallback(function () {\n        isSmoothScrollingDoneRef.current = true;\n        if (enableSmoothScroll) {\n            setScrollOffset(latestOffsetRef.current);\n        }\n        onSmoothScroll(false);\n    }, []);\n    var handleScroll = React__namespace.useCallback(function () {\n        if (!element) {\n            return;\n        }\n        switch (latestRef.current) {\n            case ScrollDirection.Horizontal:\n                latestOffsetRef.current = {\n                    left: factor * element.scrollLeft,\n                    top: 0,\n                };\n                break;\n            case ScrollDirection.Both:\n                latestOffsetRef.current = {\n                    left: factor * element.scrollLeft,\n                    top: element.scrollTop,\n                };\n                break;\n            case ScrollDirection.Vertical:\n            default:\n                latestOffsetRef.current = {\n                    left: 0,\n                    top: element.scrollTop,\n                };\n                break;\n        }\n        if (!enableSmoothScroll || isSmoothScrollingDoneRef.current) {\n            setScrollOffset(latestOffsetRef.current);\n        }\n    }, [element]);\n    useIsomorphicLayoutEffect(function () {\n        setElement(elementRef.current);\n    });\n    useIsomorphicLayoutEffect(function () {\n        if (!element) {\n            return;\n        }\n        element.addEventListener('scroll', handleScroll, SCROLL_EVENT_OPTIONS);\n        return function () {\n            element.removeEventListener('scroll', handleScroll, SCROLL_EVENT_OPTIONS);\n        };\n    }, [element]);\n    var scrollTo = React__namespace.useCallback(function (targetPosition, withSmoothScroll) {\n        var ele = elementRef.current;\n        if (!ele) {\n            return Promise.resolve();\n        }\n        var updatePosition = {\n            left: 0,\n            top: 0,\n        };\n        switch (latestRef.current) {\n            case ScrollDirection.Horizontal:\n                updatePosition.left = factor * targetPosition.left;\n                break;\n            case ScrollDirection.Both:\n                updatePosition.left = factor * targetPosition.left;\n                updatePosition.top = targetPosition.top;\n                break;\n            case ScrollDirection.Vertical:\n            default:\n                updatePosition.top = targetPosition.top;\n                break;\n        }\n        if (withSmoothScroll) {\n            isSmoothScrollingDoneRef.current = false;\n            onSmoothScroll(true);\n            return new Promise(function (resolve, _) {\n                smoothScroll(ele, latestRef.current, updatePosition, SCROLL_DURATION, easeOutQuart, function () {\n                    handleSmoothScrollingComplete();\n                    resolve();\n                });\n            });\n        }\n        return new Promise(function (resolve, _) {\n            switch (latestRef.current) {\n                case ScrollDirection.Horizontal:\n                    ele.scrollLeft = updatePosition.left;\n                    break;\n                case ScrollDirection.Both:\n                    ele.scrollLeft = updatePosition.left;\n                    ele.scrollTop = updatePosition.top;\n                    break;\n                case ScrollDirection.Vertical:\n                default:\n                    ele.scrollTop = updatePosition.top;\n                    break;\n            }\n            resolve();\n        });\n    }, [elementRef]);\n    return {\n        scrollOffset: scrollOffset,\n        scrollTo: scrollTo,\n    };\n};\n\nvar clamp = function (min, max, value) { return Math.max(min, Math.min(value, max)); };\n\nvar indexOfMax = function (arr) { return arr.reduce(function (prev, curr, i, a) { return (curr > a[prev] ? i : prev); }, 0); };\n\nvar buildContainerStyles = function (totalSize, scrollMode) {\n    switch (scrollMode) {\n        case exports.ScrollMode.Horizontal:\n            return {\n                position: 'relative',\n                height: '100%',\n                width: \"\".concat(totalSize.width, \"px\"),\n            };\n        case exports.ScrollMode.Vertical:\n        default:\n            return {\n                position: 'relative',\n                height: \"\".concat(totalSize.height, \"px\"),\n                width: '100%',\n            };\n    }\n};\n\nvar buildItemContainerStyles = function (item, parentRect, scrollMode) {\n    return scrollMode !== exports.ScrollMode.Page\n        ? {}\n        : {\n            height: \"\".concat(parentRect.height, \"px\"),\n            width: '100%',\n            position: 'absolute',\n            top: 0,\n            transform: \"translateY(\".concat(item.start.top, \"px)\"),\n        };\n};\n\nvar hasDifferentSizes = function (sizes) {\n    var numberOfItems = sizes.length;\n    if (numberOfItems === 1) {\n        return false;\n    }\n    for (var i = 1; i < numberOfItems; i++) {\n        if (sizes[i].height !== sizes[0].height || sizes[i].width !== sizes[0].width) {\n            return true;\n        }\n    }\n    return false;\n};\nvar getMinWidthOfCover = function (sizes, viewMode) {\n    if (viewMode !== exports.ViewMode.DualPageWithCover) {\n        return 0;\n    }\n    if (!hasDifferentSizes(sizes)) {\n        return 2 * sizes[0].width;\n    }\n    var chunkWidths = chunk(sizes.slice(1), 2).map(function (eachChunk) {\n        return eachChunk.length === 2 ? eachChunk[0].width + eachChunk[1].width : eachChunk[0].width;\n    });\n    var widths = [sizes[0].width].concat(chunkWidths);\n    return Math.max.apply(Math, widths);\n};\nvar buildItemStyles = function (item, isRtl, sizes, viewMode, scrollMode) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    var sideProperty = isRtl ? 'right' : 'left';\n    var factor = isRtl ? -1 : 1;\n    var numberOfItems = sizes.length;\n    var left = item.start.left * factor;\n    var _h = item.size, height = _h.height, width = _h.width;\n    if (viewMode === exports.ViewMode.DualPageWithCover) {\n        var transformTop = scrollMode === exports.ScrollMode.Page ? 0 : item.start.top;\n        if (item.index === 0 || (numberOfItems % 2 === 0 && item.index === numberOfItems - 1)) {\n            return _a = {\n                    height: \"\".concat(height, \"px\"),\n                    minWidth: \"\".concat(getMinWidthOfCover(sizes, viewMode), \"px\"),\n                    width: '100%'\n                },\n                _a[sideProperty] = 0,\n                _a.position = 'absolute',\n                _a.top = 0,\n                _a.transform = \"translate(\".concat(left, \"px, \").concat(transformTop, \"px)\"),\n                _a;\n        }\n        return _b = {\n                height: \"\".concat(height, \"px\"),\n                width: \"\".concat(width, \"px\")\n            },\n            _b[sideProperty] = 0,\n            _b.position = 'absolute',\n            _b.top = 0,\n            _b.transform = \"translate(\".concat(left, \"px, \").concat(transformTop, \"px)\"),\n            _b;\n    }\n    if (viewMode === exports.ViewMode.DualPage) {\n        return _c = {\n                height: \"\".concat(height, \"px\"),\n                width: \"\".concat(width, \"px\")\n            },\n            _c[sideProperty] = 0,\n            _c.position = 'absolute',\n            _c.top = 0,\n            _c.transform = \"translate(\".concat(left, \"px, \").concat(scrollMode === exports.ScrollMode.Page ? 0 : item.start.top, \"px)\"),\n            _c;\n    }\n    switch (scrollMode) {\n        case exports.ScrollMode.Horizontal:\n            return _d = {\n                    height: '100%',\n                    width: \"\".concat(width, \"px\")\n                },\n                _d[sideProperty] = 0,\n                _d.position = 'absolute',\n                _d.top = 0,\n                _d.transform = \"translateX(\".concat(left, \"px)\"),\n                _d;\n        case exports.ScrollMode.Page:\n            return _e = {\n                    height: \"\".concat(height, \"px\"),\n                    width: \"\".concat(width, \"px\")\n                },\n                _e[sideProperty] = 0,\n                _e.position = 'absolute',\n                _e.top = 0,\n                _e;\n        case exports.ScrollMode.Wrapped:\n            return _f = {\n                    height: \"\".concat(height, \"px\"),\n                    width: \"\".concat(width, \"px\")\n                },\n                _f[sideProperty] = 0,\n                _f.position = 'absolute',\n                _f.top = 0,\n                _f.transform = \"translate(\".concat(left, \"px, \").concat(item.start.top, \"px)\"),\n                _f;\n        case exports.ScrollMode.Vertical:\n        default:\n            return _g = {\n                    height: \"\".concat(height, \"px\"),\n                    width: '100%'\n                },\n                _g[sideProperty] = 0,\n                _g.position = 'absolute',\n                _g.top = 0,\n                _g.transform = \"translateY(\".concat(item.start.top, \"px)\"),\n                _g;\n    }\n};\n\nvar findNearest = function (low, high, value, getItemValue) {\n    while (low <= high) {\n        var middle = ((low + high) / 2) | 0;\n        var currentValue = getItemValue(middle);\n        if (currentValue < value) {\n            low = middle + 1;\n        }\n        else if (currentValue > value) {\n            high = middle - 1;\n        }\n        else {\n            return middle;\n        }\n    }\n    return low > 0 ? low - 1 : 0;\n};\n\nvar calculateRange = function (scrollDirection, measurements, outerSize, scrollOffset) {\n    var currentOffset = 0;\n    switch (scrollDirection) {\n        case ScrollDirection.Horizontal:\n            currentOffset = scrollOffset.left;\n            break;\n        case ScrollDirection.Vertical:\n        default:\n            currentOffset = scrollOffset.top;\n            break;\n    }\n    var size = measurements.length - 1;\n    var getOffset = function (index) {\n        switch (scrollDirection) {\n            case ScrollDirection.Horizontal:\n                return measurements[index].start.left;\n            case ScrollDirection.Both:\n            case ScrollDirection.Vertical:\n            default:\n                return measurements[index].start.top;\n        }\n    };\n    var start = findNearest(0, size, currentOffset, getOffset);\n    if (scrollDirection === ScrollDirection.Both) {\n        var startTop = measurements[start].start.top;\n        while (start - 1 >= 0 &&\n            measurements[start - 1].start.top === startTop &&\n            measurements[start - 1].start.left >= scrollOffset.left) {\n            start--;\n        }\n    }\n    var end = start;\n    while (end <= size) {\n        var topLeftCorner = {\n            top: measurements[end].start.top - scrollOffset.top,\n            left: measurements[end].start.left - scrollOffset.left,\n        };\n        var visibleSize = {\n            height: outerSize.height - topLeftCorner.top,\n            width: outerSize.width - topLeftCorner.left,\n        };\n        if (scrollDirection === ScrollDirection.Horizontal && visibleSize.width < 0) {\n            break;\n        }\n        if (scrollDirection === ScrollDirection.Vertical && visibleSize.height < 0) {\n            break;\n        }\n        if (scrollDirection === ScrollDirection.Both && (visibleSize.width < 0 || visibleSize.height < 0)) {\n            break;\n        }\n        end++;\n    }\n    return {\n        start: start,\n        end: end,\n    };\n};\n\nvar ZERO_OFFSET$5 = {\n    left: 0,\n    top: 0,\n};\nvar measure = function (numberOfItems, parentRect, sizes, scrollMode) {\n    var measurements = [];\n    var totalWidth = 0;\n    var firstOfRow = {\n        left: 0,\n        top: 0,\n    };\n    var maxHeight = 0;\n    var start = ZERO_OFFSET$5;\n    for (var i = 0; i < numberOfItems; i++) {\n        var size = sizes[i];\n        if (i === 0) {\n            totalWidth = size.width;\n            firstOfRow = {\n                left: 0,\n                top: 0,\n            };\n            maxHeight = size.height;\n        }\n        else {\n            switch (scrollMode) {\n                case exports.ScrollMode.Wrapped:\n                    totalWidth += size.width;\n                    if (totalWidth < parentRect.width) {\n                        start = {\n                            left: measurements[i - 1].end.left,\n                            top: firstOfRow.top,\n                        };\n                        maxHeight = Math.max(maxHeight, size.height);\n                    }\n                    else {\n                        totalWidth = size.width;\n                        start = {\n                            left: firstOfRow.left,\n                            top: firstOfRow.top + maxHeight,\n                        };\n                        firstOfRow = {\n                            left: start.left,\n                            top: start.top,\n                        };\n                        maxHeight = size.height;\n                    }\n                    break;\n                case exports.ScrollMode.Horizontal:\n                case exports.ScrollMode.Vertical:\n                default:\n                    start = measurements[i - 1].end;\n                    break;\n            }\n        }\n        var end = {\n            left: start.left + size.width,\n            top: start.top + size.height,\n        };\n        measurements[i] = {\n            index: i,\n            start: start,\n            size: size,\n            end: end,\n            visibility: -1,\n        };\n    }\n    return measurements;\n};\n\nvar ZERO_OFFSET$4 = {\n    left: 0,\n    top: 0,\n};\nvar measureDualPage = function (numberOfItems, parentRect, sizes, scrollMode) {\n    var measurements = [];\n    var top = 0;\n    var maxHeight = 0;\n    var start = ZERO_OFFSET$4;\n    for (var i = 0; i < numberOfItems; i++) {\n        var size = {\n            height: scrollMode === exports.ScrollMode.Page ? Math.max(parentRect.height, sizes[i].height) : sizes[i].height,\n            width: Math.max(parentRect.width / 2, sizes[i].width),\n        };\n        if (scrollMode === exports.ScrollMode.Page) {\n            start = {\n                left: i % 2 === 0 ? 0 : size.width,\n                top: Math.floor(i / 2) * size.height,\n            };\n        }\n        else {\n            if (i % 2 === 0) {\n                top = top + maxHeight;\n                start = {\n                    left: 0,\n                    top: top,\n                };\n                maxHeight = i === numberOfItems - 1 ? sizes[i].height : Math.max(sizes[i].height, sizes[i + 1].height);\n            }\n            else {\n                start = {\n                    left: measurements[i - 1].end.left,\n                    top: top,\n                };\n            }\n        }\n        var end = {\n            left: start.left + size.width,\n            top: start.top + size.height,\n        };\n        measurements[i] = {\n            index: i,\n            start: start,\n            size: size,\n            end: end,\n            visibility: -1,\n        };\n    }\n    return measurements;\n};\n\nvar ZERO_OFFSET$3 = {\n    left: 0,\n    top: 0,\n};\nvar measureDualPageWithCover = function (numberOfItems, parentRect, sizes, scrollMode) {\n    var measurements = [];\n    var top = 0;\n    var maxHeight = 0;\n    var start = ZERO_OFFSET$3;\n    for (var i = 0; i < numberOfItems; i++) {\n        var size = i === 0\n            ? {\n                height: scrollMode === exports.ScrollMode.Page\n                    ? Math.max(parentRect.height, sizes[i].height)\n                    : sizes[i].height,\n                width: scrollMode === exports.ScrollMode.Page ? Math.max(parentRect.width, sizes[i].width) : sizes[i].width,\n            }\n            : {\n                height: scrollMode === exports.ScrollMode.Page\n                    ? Math.max(parentRect.height, sizes[i].height)\n                    : sizes[i].height,\n                width: Math.max(parentRect.width / 2, sizes[i].width),\n            };\n        if (scrollMode === exports.ScrollMode.Page) {\n            start =\n                i === 0\n                    ? ZERO_OFFSET$3\n                    : {\n                        left: i % 2 === 0 ? size.width : 0,\n                        top: Math.floor((i - 1) / 2) * size.height + measurements[0].end.top,\n                    };\n        }\n        else {\n            if (i === 0) {\n                start = ZERO_OFFSET$3;\n                top = sizes[0].height;\n                maxHeight = 0;\n            }\n            else if (i % 2 === 1) {\n                top = top + maxHeight;\n                start = {\n                    left: 0,\n                    top: top,\n                };\n                maxHeight = i === numberOfItems - 1 ? sizes[i].height : Math.max(sizes[i].height, sizes[i + 1].height);\n            }\n            else {\n                start = {\n                    left: measurements[i - 1].end.left,\n                    top: top,\n                };\n            }\n        }\n        var end = {\n            left: start.left + size.width,\n            top: start.top + size.height,\n        };\n        measurements[i] = {\n            index: i,\n            start: start,\n            size: size,\n            end: end,\n            visibility: -1,\n        };\n    }\n    return measurements;\n};\n\nvar ZERO_OFFSET$2 = {\n    left: 0,\n    top: 0,\n};\nvar measureSinglePage = function (numberOfItems, parentRect, sizes) {\n    var measurements = [];\n    for (var i = 0; i < numberOfItems; i++) {\n        var size = {\n            height: Math.max(parentRect.height, sizes[i].height),\n            width: Math.max(parentRect.width, sizes[i].width),\n        };\n        var start = i === 0 ? ZERO_OFFSET$2 : measurements[i - 1].end;\n        var end = {\n            left: start.left + size.width,\n            top: start.top + size.height,\n        };\n        measurements[i] = {\n            index: i,\n            start: start,\n            size: size,\n            end: end,\n            visibility: -1,\n        };\n    }\n    return measurements;\n};\n\nvar ZERO_RECT$2 = {\n    height: 0,\n    width: 0,\n};\nvar ZERO_OFFSET$1 = {\n    left: 0,\n    top: 0,\n};\nvar COMPARE_EPSILON = 0.000000000001;\nvar VIRTUAL_INDEX_ATTR = 'data-virtual-index';\nvar IO_THRESHOLD = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1];\nvar useVirtual = function (_a) {\n    var enableSmoothScroll = _a.enableSmoothScroll, isRtl = _a.isRtl, numberOfItems = _a.numberOfItems, parentRef = _a.parentRef, setRenderRange = _a.setRenderRange, sizes = _a.sizes, scrollMode = _a.scrollMode, viewMode = _a.viewMode;\n    var _b = React__namespace.useState(false), isSmoothScrolling = _b[0], setSmoothScrolling = _b[1];\n    var onSmoothScroll = React__namespace.useCallback(function (isSmoothScrolling) { return setSmoothScrolling(isSmoothScrolling); }, []);\n    var scrollModeRef = React__namespace.useRef(scrollMode);\n    scrollModeRef.current = scrollMode;\n    var viewModeRef = React__namespace.useRef(viewMode);\n    viewModeRef.current = viewMode;\n    var scrollDirection = scrollMode === exports.ScrollMode.Wrapped || viewMode === exports.ViewMode.DualPageWithCover || viewMode === exports.ViewMode.DualPage\n        ? ScrollDirection.Both\n        : scrollMode === exports.ScrollMode.Horizontal\n            ? ScrollDirection.Horizontal\n            : ScrollDirection.Vertical;\n    var _c = useScroll({\n        elementRef: parentRef,\n        enableSmoothScroll: enableSmoothScroll,\n        isRtl: isRtl,\n        scrollDirection: scrollDirection,\n        onSmoothScroll: onSmoothScroll,\n    }), scrollOffset = _c.scrollOffset, scrollTo = _c.scrollTo;\n    var parentRect = useMeasureRect({\n        elementRef: parentRef,\n    });\n    var latestRef = React__namespace.useRef({\n        scrollOffset: ZERO_OFFSET$1,\n        measurements: [],\n    });\n    latestRef.current.scrollOffset = scrollOffset;\n    var defaultVisibilities = React__namespace.useMemo(function () { return Array(numberOfItems).fill(-1); }, []);\n    var _d = React__namespace.useState(defaultVisibilities), visibilities = _d[0], setVisibilities = _d[1];\n    var intersectionTracker = React__namespace.useMemo(function () {\n        var io = new IntersectionObserver(function (entries) {\n            entries.forEach(function (entry) {\n                var ratio = entry.isIntersecting ? entry.intersectionRatio : -1;\n                var target = entry.target;\n                var indexAttribute = target.getAttribute(VIRTUAL_INDEX_ATTR);\n                if (!indexAttribute) {\n                    return;\n                }\n                var index = parseInt(indexAttribute, 10);\n                if (0 <= index && index < numberOfItems) {\n                    setVisibilities(function (old) {\n                        old[index] = ratio;\n                        return __spreadArray([], old, true);\n                    });\n                }\n            });\n        }, {\n            threshold: IO_THRESHOLD,\n        });\n        return io;\n    }, []);\n    var measurements = React__namespace.useMemo(function () {\n        if (scrollMode === exports.ScrollMode.Page && viewMode === exports.ViewMode.SinglePage) {\n            return measureSinglePage(numberOfItems, parentRect, sizes);\n        }\n        if (viewMode === exports.ViewMode.DualPageWithCover) {\n            return measureDualPageWithCover(numberOfItems, parentRect, sizes, scrollMode);\n        }\n        if (viewMode === exports.ViewMode.DualPage) {\n            return measureDualPage(numberOfItems, parentRect, sizes, scrollMode);\n        }\n        return measure(numberOfItems, parentRect, sizes, scrollMode);\n    }, [scrollMode, sizes, viewMode, parentRect]);\n    var totalSize = measurements[numberOfItems - 1]\n        ? {\n            height: measurements[numberOfItems - 1].end.top,\n            width: measurements[numberOfItems - 1].end.left,\n        }\n        : ZERO_RECT$2;\n    latestRef.current.measurements = measurements;\n    var _e = React__namespace.useMemo(function () {\n        var _a = calculateRange(scrollDirection, measurements, parentRect, scrollOffset), start = _a.start, end = _a.end;\n        var visiblePageVisibilities = visibilities.slice(clamp(0, numberOfItems, start), clamp(0, numberOfItems, end));\n        var maxVisbilityItem = start + indexOfMax(visiblePageVisibilities);\n        maxVisbilityItem = clamp(0, numberOfItems - 1, maxVisbilityItem);\n        var maxVisbilityIndex = maxVisbilityItem;\n        var _b = setRenderRange({\n            endPage: end,\n            numPages: numberOfItems,\n            startPage: start,\n        }), startPage = _b.startPage, endPage = _b.endPage;\n        startPage = Math.max(startPage, 0);\n        endPage = Math.min(endPage, numberOfItems - 1);\n        switch (viewMode) {\n            case exports.ViewMode.DualPageWithCover:\n                if (maxVisbilityItem > 0) {\n                    maxVisbilityIndex = maxVisbilityItem % 2 === 1 ? maxVisbilityItem : maxVisbilityItem - 1;\n                }\n                startPage = startPage === 0 ? 0 : startPage % 2 === 1 ? startPage : startPage - 1;\n                endPage = endPage % 2 === 1 ? endPage - 1 : endPage;\n                if (numberOfItems - endPage <= 2) {\n                    endPage = numberOfItems - 1;\n                }\n                break;\n            case exports.ViewMode.DualPage:\n                maxVisbilityIndex = maxVisbilityItem % 2 === 0 ? maxVisbilityItem : maxVisbilityItem - 1;\n                startPage = startPage % 2 === 0 ? startPage : startPage - 1;\n                endPage = endPage % 2 === 1 ? endPage : endPage - 1;\n                break;\n            case exports.ViewMode.SinglePage:\n            default:\n                maxVisbilityIndex = maxVisbilityItem;\n                break;\n        }\n        return {\n            startPage: startPage,\n            endPage: endPage,\n            maxVisbilityIndex: maxVisbilityIndex,\n        };\n    }, [measurements, parentRect, scrollOffset, viewMode, visibilities]), startPage = _e.startPage, endPage = _e.endPage, maxVisbilityIndex = _e.maxVisbilityIndex;\n    var virtualItems = React__namespace.useMemo(function () {\n        var virtualItems = [];\n        var _loop_1 = function (i) {\n            var item = measurements[i];\n            var virtualItem = __assign(__assign({}, item), { visibility: visibilities[i] !== undefined ? visibilities[i] : -1, measureRef: function (ele) {\n                    if (!ele) {\n                        return;\n                    }\n                    ele.setAttribute(VIRTUAL_INDEX_ATTR, \"\".concat(i));\n                    intersectionTracker.observe(ele);\n                } });\n            virtualItems.push(virtualItem);\n        };\n        for (var i = startPage; i <= endPage; i++) {\n            _loop_1(i);\n        }\n        return virtualItems;\n    }, [startPage, endPage, visibilities, measurements]);\n    var scrollToItem = React__namespace.useCallback(function (index, offset) {\n        var measurements = latestRef.current.measurements;\n        var normalizedIndex = clamp(0, numberOfItems - 1, index);\n        var measurement = measurements[normalizedIndex];\n        var withOffset = scrollModeRef.current === exports.ScrollMode.Page ? ZERO_OFFSET$1 : offset;\n        return measurement\n            ? scrollTo({\n                left: withOffset.left + measurement.start.left,\n                top: withOffset.top + measurement.start.top,\n            }, enableSmoothScroll)\n            : Promise.resolve();\n    }, [scrollTo, enableSmoothScroll]);\n    var scrollToSmallestItemAbove = React__namespace.useCallback(function (index, offset) {\n        var measurements = latestRef.current.measurements;\n        var start = measurements[index].start;\n        var nextItem = measurements.find(function (item) { return item.start.top - start.top > COMPARE_EPSILON; });\n        if (!nextItem) {\n            return Promise.resolve();\n        }\n        var nextIndex = nextItem.index;\n        switch (viewModeRef.current) {\n            case exports.ViewMode.DualPage:\n                nextIndex = nextIndex % 2 === 0 ? nextIndex : nextIndex + 1;\n                break;\n            case exports.ViewMode.DualPageWithCover:\n                nextIndex = nextIndex % 2 === 1 ? nextIndex : nextIndex + 1;\n                break;\n        }\n        return scrollToItem(nextIndex, offset);\n    }, []);\n    var scrollToBiggestItemBelow = React__namespace.useCallback(function (index, offset) {\n        var measurements = latestRef.current.measurements;\n        var start = measurements[index].start;\n        var prevIndex = index;\n        var found = false;\n        for (var i = numberOfItems - 1; i >= 0; i--) {\n            if (start.top - measurements[i].start.top > COMPARE_EPSILON) {\n                found = true;\n                prevIndex = measurements[i].index;\n                break;\n            }\n        }\n        if (!found) {\n            return Promise.resolve();\n        }\n        switch (viewModeRef.current) {\n            case exports.ViewMode.DualPage:\n                prevIndex = prevIndex % 2 === 0 ? prevIndex : prevIndex - 1;\n                break;\n            case exports.ViewMode.DualPageWithCover:\n                prevIndex = prevIndex % 2 === 0 ? prevIndex - 1 : prevIndex;\n                break;\n        }\n        if (prevIndex === index) {\n            prevIndex = index - 1;\n        }\n        return scrollToItem(prevIndex, offset);\n    }, []);\n    var scrollToNextItem = React__namespace.useCallback(function (index, offset) {\n        if (viewModeRef.current === exports.ViewMode.DualPageWithCover || viewModeRef.current === exports.ViewMode.DualPage) {\n            return scrollToSmallestItemAbove(index, offset);\n        }\n        switch (scrollModeRef.current) {\n            case exports.ScrollMode.Wrapped:\n                return scrollToSmallestItemAbove(index, offset);\n            case exports.ScrollMode.Horizontal:\n            case exports.ScrollMode.Vertical:\n            default:\n                return scrollToItem(index + 1, offset);\n        }\n    }, []);\n    var scrollToPreviousItem = React__namespace.useCallback(function (index, offset) {\n        if (viewModeRef.current === exports.ViewMode.DualPageWithCover || viewModeRef.current === exports.ViewMode.DualPage) {\n            return scrollToBiggestItemBelow(index, offset);\n        }\n        switch (scrollModeRef.current) {\n            case exports.ScrollMode.Wrapped:\n                return scrollToBiggestItemBelow(index, offset);\n            case exports.ScrollMode.Horizontal:\n            case exports.ScrollMode.Vertical:\n            default:\n                return scrollToItem(index - 1, offset);\n        }\n    }, []);\n    var getContainerStyles = React__namespace.useCallback(function () { return buildContainerStyles(totalSize, scrollModeRef.current); }, [totalSize]);\n    var getItemContainerStyles = React__namespace.useCallback(function (item) { return buildItemContainerStyles(item, parentRect, scrollModeRef.current); }, [parentRect]);\n    var getItemStyles = React__namespace.useCallback(function (item) { return buildItemStyles(item, isRtl, sizes, viewModeRef.current, scrollModeRef.current); }, [isRtl, sizes]);\n    var zoom = React__namespace.useCallback(function (scale, index) {\n        var _a = latestRef.current, measurements = _a.measurements, scrollOffset = _a.scrollOffset;\n        var normalizedIndex = clamp(0, numberOfItems - 1, index);\n        var measurement = measurements[normalizedIndex];\n        if (measurement) {\n            var updateOffset = scrollModeRef.current === exports.ScrollMode.Page\n                ? {\n                    left: measurement.start.left,\n                    top: measurement.start.top,\n                }\n                : {\n                    left: scrollOffset.left * scale,\n                    top: scrollOffset.top * scale,\n                };\n            return scrollTo(updateOffset, false);\n        }\n        return Promise.resolve();\n    }, []);\n    React__namespace.useEffect(function () {\n        return function () {\n            intersectionTracker.disconnect();\n        };\n    }, []);\n    return {\n        boundingClientRect: parentRect,\n        isSmoothScrolling: isSmoothScrolling,\n        startPage: startPage,\n        endPage: endPage,\n        maxVisbilityIndex: maxVisbilityIndex,\n        virtualItems: virtualItems,\n        getContainerStyles: getContainerStyles,\n        getItemContainerStyles: getItemContainerStyles,\n        getItemStyles: getItemStyles,\n        scrollToItem: scrollToItem,\n        scrollToNextItem: scrollToNextItem,\n        scrollToPreviousItem: scrollToPreviousItem,\n        zoom: zoom,\n    };\n};\n\nvar SCROLL_BAR_WIDTH = 17;\nvar PAGE_PADDING = 8;\nvar calculateScale = function (container, pageHeight, pageWidth, scale, viewMode, numPages) {\n    var w = pageWidth;\n    switch (true) {\n        case viewMode === exports.ViewMode.DualPageWithCover && numPages >= 3:\n        case viewMode === exports.ViewMode.DualPage && numPages >= 3:\n            w = 2 * pageWidth;\n            break;\n        default:\n            w = pageWidth;\n            break;\n    }\n    switch (scale) {\n        case exports.SpecialZoomLevel.ActualSize:\n            return 1;\n        case exports.SpecialZoomLevel.PageFit:\n            return Math.min((container.clientWidth - SCROLL_BAR_WIDTH) / w, (container.clientHeight - 2 * PAGE_PADDING) / pageHeight);\n        case exports.SpecialZoomLevel.PageWidth:\n            return (container.clientWidth - SCROLL_BAR_WIDTH) / w;\n    }\n};\n\nvar useStack = function (maxLength) {\n    var stackRef = React__namespace.useRef([]);\n    var map = function (transformer) {\n        return stackRef.current.map(function (item) { return transformer(item); });\n    };\n    var pop = function () {\n        var stack = stackRef.current;\n        var size = stack.length;\n        if (size === 0) {\n            return null;\n        }\n        var lastItem = stack.pop();\n        stackRef.current = stack;\n        return lastItem;\n    };\n    var push = function (item) {\n        var stack = stackRef.current;\n        if (stack.length + 1 > maxLength) {\n            stack.shift();\n        }\n        stack.push(item);\n        stackRef.current = stack;\n    };\n    React__namespace.useEffect(function () {\n        return function () {\n            stackRef.current = [];\n        };\n    }, []);\n    return {\n        push: push,\n        map: map,\n        pop: pop,\n    };\n};\n\nvar useQueue = function (maxLength) {\n    var queueRef = React__namespace.useRef([]);\n    var dequeue = function () {\n        var queue = queueRef.current;\n        var size = queue.length;\n        if (size === 0) {\n            return null;\n        }\n        var firstItem = queue.shift();\n        queueRef.current = queue;\n        return firstItem || null;\n    };\n    var enqueue = function (item) {\n        var queue = queueRef.current;\n        if (queue.length + 1 > maxLength) {\n            queue.pop();\n        }\n        queueRef.current = [item].concat(queue);\n    };\n    var map = function (transformer) {\n        return queueRef.current.map(function (item) { return transformer(item); });\n    };\n    React__namespace.useEffect(function () {\n        return function () {\n            queueRef.current = [];\n        };\n    }, []);\n    return {\n        dequeue: dequeue,\n        enqueue: enqueue,\n        map: map,\n    };\n};\n\nvar MAX_QUEUE_LENGTH = 50;\nvar useDestination = function (_a) {\n    var getCurrentPage = _a.getCurrentPage;\n    var previousDestinations = useStack(MAX_QUEUE_LENGTH);\n    var nextDestinations = useQueue(MAX_QUEUE_LENGTH);\n    var getNextDestination = function () {\n        var nextDest = nextDestinations.dequeue();\n        if (nextDest) {\n            previousDestinations.push(nextDest);\n        }\n        if (nextDest && nextDest.pageIndex === getCurrentPage()) {\n            return getNextDestination();\n        }\n        return nextDest;\n    };\n    var getPreviousDestination = function () {\n        var prevDest = previousDestinations.pop();\n        if (prevDest) {\n            nextDestinations.enqueue(prevDest);\n        }\n        if (prevDest && prevDest.pageIndex === getCurrentPage()) {\n            return getPreviousDestination();\n        }\n        return prevDest;\n    };\n    var markVisitedDestination = React__namespace.useCallback(function (destination) {\n        previousDestinations.push(destination);\n    }, []);\n    return {\n        getNextDestination: getNextDestination,\n        getPreviousDestination: getPreviousDestination,\n        markVisitedDestination: markVisitedDestination,\n    };\n};\n\nvar flaternSingleOutline = function (outline) {\n    var result = [];\n    if (outline.items && outline.items.length > 0) {\n        result = result.concat(flaternOutlines(outline.items));\n    }\n    return result;\n};\nvar flaternOutlines = function (outlines) {\n    var result = [];\n    outlines.map(function (outline) {\n        result = result.concat(outline).concat(flaternSingleOutline(outline));\n    });\n    return result;\n};\nvar useOutlines = function (doc) {\n    var isMounted = useIsMounted();\n    var _a = React__namespace.useState([]), outlines = _a[0], setOutlines = _a[1];\n    React__namespace.useEffect(function () {\n        doc.getOutline().then(function (result) {\n            if (isMounted.current && result !== null) {\n                var items = flaternOutlines(result);\n                setOutlines(items);\n            }\n        });\n    }, []);\n    return outlines;\n};\n\nvar RESIZE_EVENT_OPTIONS = {\n    capture: false,\n    passive: true,\n};\nvar ZERO_RECT$1 = {\n    height: 0,\n    width: 0,\n};\nvar useWindowResize = function () {\n    var _a = React__namespace.useState(ZERO_RECT$1), windowRect = _a[0], setWindowRect = _a[1];\n    var handleResize = useDebounceCallback(function () {\n        setWindowRect({\n            height: window.innerHeight,\n            width: window.innerWidth,\n        });\n    }, 100);\n    useIsomorphicLayoutEffect(function () {\n        window.addEventListener('resize', handleResize, RESIZE_EVENT_OPTIONS);\n        return function () {\n            window.removeEventListener('resize', handleResize, RESIZE_EVENT_OPTIONS);\n        };\n    }, []);\n    return windowRect;\n};\n\nvar ZERO_RECT = {\n    height: 0,\n    width: 0,\n};\nvar useFullScreen = function (_a) {\n    var getCurrentPage = _a.getCurrentPage, getCurrentScrollMode = _a.getCurrentScrollMode, jumpToPage = _a.jumpToPage, targetRef = _a.targetRef;\n    var _b = React__namespace.useState(exports.FullScreenMode.Normal), fullScreenMode = _b[0], setFullScreenMode = _b[1];\n    var windowRect = useWindowResize();\n    var _c = React__namespace.useState(ZERO_RECT), targetRect = _c[0], setTargetRect = _c[1];\n    var windowSizeBeforeFullScreenRef = React__namespace.useRef(ZERO_RECT);\n    var targetPageRef = React__namespace.useRef(getCurrentPage());\n    var fullScreenSizeRef = React__namespace.useRef(ZERO_RECT);\n    var _d = React__namespace.useState(targetRef.current), element = _d[0], setElement = _d[1];\n    var fullScreenElementRef = React__namespace.useRef();\n    useIsomorphicLayoutEffect(function () {\n        if (targetRef.current !== element) {\n            setElement(targetRef.current);\n        }\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element) {\n            return;\n        }\n        var io = new ResizeObserver(function (entries) {\n            entries.forEach(function (entry) {\n                var _a = entry.target.getBoundingClientRect(), height = _a.height, width = _a.width;\n                setTargetRect({ height: height, width: width });\n            });\n        });\n        io.observe(element);\n        return function () {\n            io.unobserve(element);\n            io.disconnect();\n        };\n    }, [element]);\n    var closeOtherFullScreen = React__namespace.useCallback(function (target) {\n        var currentFullScreenEle = getFullScreenElement();\n        if (currentFullScreenEle && currentFullScreenEle !== target) {\n            setFullScreenMode(exports.FullScreenMode.Normal);\n            return exitFullScreen(currentFullScreenEle);\n        }\n        return Promise.resolve();\n    }, []);\n    var enterFullScreenMode = React__namespace.useCallback(function (target) {\n        if (!target || !isFullScreenEnabled()) {\n            return;\n        }\n        setElement(target);\n        closeOtherFullScreen(target).then(function () {\n            fullScreenElementRef.current = target;\n            setFullScreenMode(exports.FullScreenMode.Entering);\n            requestFullScreen(target);\n        });\n    }, []);\n    var exitFullScreenMode = React__namespace.useCallback(function () {\n        var currentFullScreenEle = getFullScreenElement();\n        if (currentFullScreenEle) {\n            setFullScreenMode(exports.FullScreenMode.Exitting);\n            exitFullScreen(document);\n        }\n    }, []);\n    var handleFullScreenChange = React__namespace.useCallback(function () {\n        if (!element) {\n            return;\n        }\n        var currentFullScreenEle = getFullScreenElement();\n        if (currentFullScreenEle !== element) {\n            setFullScreenMode(exports.FullScreenMode.Exitting);\n        }\n    }, [element]);\n    React__namespace.useEffect(function () {\n        switch (fullScreenMode) {\n            case exports.FullScreenMode.Entering:\n                if (fullScreenElementRef.current) {\n                    fullScreenElementRef.current.style.backgroundColor =\n                        'var(--rpv-core__full-screen-target-background-color)';\n                }\n                targetPageRef.current = getCurrentPage();\n                windowSizeBeforeFullScreenRef.current = {\n                    height: window.innerHeight,\n                    width: window.innerWidth,\n                };\n                break;\n            case exports.FullScreenMode.Entered:\n                if (getCurrentScrollMode() === exports.ScrollMode.Page) {\n                    jumpToPage(targetPageRef.current).then(function () {\n                        setFullScreenMode(exports.FullScreenMode.EnteredCompletely);\n                    });\n                }\n                else {\n                    setFullScreenMode(exports.FullScreenMode.EnteredCompletely);\n                }\n                break;\n            case exports.FullScreenMode.Exitting:\n                if (fullScreenElementRef.current) {\n                    fullScreenElementRef.current.style.backgroundColor = '';\n                    fullScreenElementRef.current = null;\n                }\n                targetPageRef.current = getCurrentPage();\n                break;\n            case exports.FullScreenMode.Exited:\n                setFullScreenMode(exports.FullScreenMode.Normal);\n                if (getCurrentScrollMode() === exports.ScrollMode.Page) {\n                    jumpToPage(targetPageRef.current);\n                }\n                break;\n        }\n    }, [fullScreenMode]);\n    React__namespace.useEffect(function () {\n        if (fullScreenMode === exports.FullScreenMode.Normal) {\n            return;\n        }\n        if (fullScreenMode === exports.FullScreenMode.Entering &&\n            windowRect.height === targetRect.height &&\n            windowRect.width === targetRect.width &&\n            windowRect.height > 0 &&\n            windowRect.width > 0 &&\n            (fullScreenSizeRef.current.height === 0 || windowRect.height == fullScreenSizeRef.current.height)) {\n            fullScreenSizeRef.current = {\n                height: window.innerHeight,\n                width: window.innerWidth,\n            };\n            setFullScreenMode(exports.FullScreenMode.Entered);\n            return;\n        }\n        if (fullScreenMode === exports.FullScreenMode.Exitting &&\n            windowSizeBeforeFullScreenRef.current.height === windowRect.height &&\n            windowSizeBeforeFullScreenRef.current.width === windowRect.width &&\n            windowRect.height > 0 &&\n            windowRect.width > 0) {\n            setFullScreenMode(exports.FullScreenMode.Exited);\n        }\n    }, [fullScreenMode, windowRect, targetRect]);\n    React__namespace.useEffect(function () {\n        addFullScreenChangeListener(handleFullScreenChange);\n        return function () {\n            removeFullScreenChangeListener(handleFullScreenChange);\n        };\n    }, [element]);\n    return {\n        enterFullScreenMode: enterFullScreenMode,\n        exitFullScreenMode: exitFullScreenMode,\n        fullScreenMode: fullScreenMode,\n    };\n};\n\nvar DEFAULT_PAGE_LAYOUT = {\n    buildPageStyles: function () { return ({}); },\n    transformSize: function (_a) {\n        var size = _a.size;\n        return size;\n    },\n};\nvar ZERO_OFFSET = {\n    left: 0,\n    top: 0,\n};\nvar Inner = function (_a) {\n    var currentFile = _a.currentFile, defaultScale = _a.defaultScale, doc = _a.doc, enableSmoothScroll = _a.enableSmoothScroll, initialPage = _a.initialPage, initialRotation = _a.initialRotation, initialScale = _a.initialScale, pageLayout = _a.pageLayout, pageSizes = _a.pageSizes, plugins = _a.plugins, renderPage = _a.renderPage, scrollMode = _a.scrollMode, setRenderRange = _a.setRenderRange, viewMode = _a.viewMode, viewerState = _a.viewerState, onDocumentLoad = _a.onDocumentLoad, onOpenFile = _a.onOpenFile, onPageChange = _a.onPageChange, onRotate = _a.onRotate, onRotatePage = _a.onRotatePage, onZoom = _a.onZoom;\n    var numPages = doc.numPages;\n    var docId = doc.loadingTask.docId;\n    var l10n = React__namespace.useContext(LocalizationContext).l10n;\n    var themeContext = React__namespace.useContext(ThemeContext);\n    var isRtl = themeContext.direction === exports.TextDirection.RightToLeft;\n    var containerRef = React__namespace.useRef();\n    var pagesRef = React__namespace.useRef();\n    var _b = React__namespace.useState(initialPage), currentPage = _b[0], setCurrentPage = _b[1];\n    var mostRecentVisitedRef = React__namespace.useRef(null);\n    var destinationManager = useDestination({\n        getCurrentPage: function () { return stateRef.current.pageIndex; },\n    });\n    var _c = React__namespace.useState(initialRotation), rotation = _c[0], setRotation = _c[1];\n    var previousRotation = usePrevious(rotation);\n    var _d = React__namespace.useState(false), pagesRotationChanged = _d[0], setPagesRotationChanged = _d[1];\n    var _e = React__namespace.useState(new Map()), pagesRotation = _e[0], setPagesRotation = _e[1];\n    var _f = React__namespace.useState(scrollMode), currentScrollMode = _f[0], setCurrentScrollMode = _f[1];\n    var previousScrollMode = usePrevious(currentScrollMode);\n    var _g = React__namespace.useState(viewMode), currentViewMode = _g[0], setCurrentViewMode = _g[1];\n    var previousViewMode = usePrevious(currentViewMode);\n    var outlines = useOutlines(doc);\n    var _h = React__namespace.useState(initialScale), scale = _h[0], setScale = _h[1];\n    var previousScale = usePrevious(scale);\n    var stateRef = React__namespace.useRef(viewerState);\n    var keepSpecialZoomLevelRef = React__namespace.useRef(typeof defaultScale === 'string' ? defaultScale : null);\n    var forceTargetFullScreenRef = React__namespace.useRef(-1);\n    var forceTargetZoomRef = React__namespace.useRef(-1);\n    var forceTargetInitialPageRef = React__namespace.useRef(initialPage);\n    var fullScreen = useFullScreen({\n        getCurrentPage: function () { return stateRef.current.pageIndex; },\n        getCurrentScrollMode: function () { return stateRef.current.scrollMode; },\n        jumpToPage: function (pageIndex) { return jumpToPage(pageIndex); },\n        targetRef: pagesRef,\n    });\n    var _j = React__namespace.useState(-1), renderPageIndex = _j[0], setRenderPageIndex = _j[1];\n    var _k = React__namespace.useState(0), renderQueueKey = _k[0], setRenderQueueKey = _k[1];\n    var renderQueue = useRenderQueue({ doc: doc });\n    React__namespace.useEffect(function () {\n        return function () {\n            clearPagesCache();\n        };\n    }, [docId]);\n    var layoutBuilder = React__namespace.useMemo(function () { return Object.assign({}, DEFAULT_PAGE_LAYOUT, pageLayout); }, []);\n    var sizes = React__namespace.useMemo(function () {\n        return Array(numPages)\n            .fill(0)\n            .map(function (_, pageIndex) {\n            var pageSize = [pageSizes[pageIndex].pageHeight, pageSizes[pageIndex].pageWidth];\n            var rect = Math.abs(rotation) % 180 === 0\n                ? {\n                    height: pageSize[0],\n                    width: pageSize[1],\n                }\n                : {\n                    height: pageSize[1],\n                    width: pageSize[0],\n                };\n            var pageRect = {\n                height: rect.height * scale,\n                width: rect.width * scale,\n            };\n            return layoutBuilder.transformSize({ numPages: numPages, pageIndex: pageIndex, size: pageRect });\n        });\n    }, [rotation, scale]);\n    var virtualizer = useVirtual({\n        enableSmoothScroll: enableSmoothScroll,\n        isRtl: isRtl,\n        numberOfItems: numPages,\n        parentRef: pagesRef,\n        scrollMode: currentScrollMode,\n        setRenderRange: setRenderRange,\n        sizes: sizes,\n        viewMode: currentViewMode,\n    });\n    var handlePagesResize = useDebounceCallback(function () {\n        if (!keepSpecialZoomLevelRef.current ||\n            stateRef.current.fullScreenMode !== exports.FullScreenMode.Normal ||\n            (initialPage > 0 && forceTargetInitialPageRef.current === initialPage)) {\n            return;\n        }\n        zoom(keepSpecialZoomLevelRef.current);\n    }, 200);\n    useTrackResize({\n        targetRef: pagesRef,\n        onResize: handlePagesResize,\n    });\n    var setViewerState = function (viewerState) {\n        var newState = viewerState;\n        plugins.forEach(function (plugin) {\n            if (plugin.onViewerStateChange) {\n                newState = plugin.onViewerStateChange(newState);\n            }\n        });\n        stateRef.current = newState;\n    };\n    var getPagesContainer = function () { return pagesRef.current; };\n    var getViewerState = function () { return stateRef.current; };\n    var handleJumpFromLinkAnnotation = React__namespace.useCallback(function (destination) {\n        destinationManager.markVisitedDestination(destination);\n    }, []);\n    var handleJumpToDestination = React__namespace.useCallback(function (destination) {\n        var pageIndex = destination.pageIndex, bottomOffset = destination.bottomOffset, leftOffset = destination.leftOffset, scaleTo = destination.scaleTo;\n        var pagesContainer = pagesRef.current;\n        var currentState = stateRef.current;\n        if (!pagesContainer || !currentState) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, _) {\n            getPage(doc, pageIndex).then(function (page) {\n                var viewport = page.getViewport({ scale: 1 });\n                var top = 0;\n                var bottom = (typeof bottomOffset === 'function'\n                    ? bottomOffset(viewport.width, viewport.height)\n                    : bottomOffset) || 0;\n                var left = (typeof leftOffset === 'function' ? leftOffset(viewport.width, viewport.height) : leftOffset) || 0;\n                var updateScale = currentState.scale;\n                switch (scaleTo) {\n                    case exports.SpecialZoomLevel.PageFit:\n                        top = 0;\n                        left = 0;\n                        zoom(exports.SpecialZoomLevel.PageFit);\n                        break;\n                    case exports.SpecialZoomLevel.PageWidth:\n                        updateScale = calculateScale(pagesContainer, pageSizes[pageIndex].pageHeight, pageSizes[pageIndex].pageWidth, exports.SpecialZoomLevel.PageWidth, viewMode, numPages);\n                        top = (viewport.height - bottom) * updateScale;\n                        left = left * updateScale;\n                        zoom(updateScale);\n                        break;\n                    default:\n                        top = (viewport.height - bottom) * updateScale;\n                        left = left * updateScale;\n                        break;\n                }\n                switch (currentState.scrollMode) {\n                    case exports.ScrollMode.Horizontal:\n                        virtualizer.scrollToItem(pageIndex, { left: left, top: 0 }).then(function () {\n                            resolve();\n                        });\n                        break;\n                    case exports.ScrollMode.Vertical:\n                    default:\n                        virtualizer.scrollToItem(pageIndex, { left: 0, top: top }).then(function () {\n                            resolve();\n                        });\n                        break;\n                }\n            });\n        });\n    }, []);\n    var jumpToDestination = React__namespace.useCallback(function (destination) {\n        destinationManager.markVisitedDestination(destination);\n        return handleJumpToDestination(destination);\n    }, []);\n    var jumpToNextDestination = React__namespace.useCallback(function () {\n        var nextDestination = destinationManager.getNextDestination();\n        return nextDestination ? handleJumpToDestination(nextDestination) : Promise.resolve();\n    }, []);\n    var jumpToPreviousDestination = React__namespace.useCallback(function () {\n        var lastDestination = destinationManager.getPreviousDestination();\n        return lastDestination ? handleJumpToDestination(lastDestination) : Promise.resolve();\n    }, []);\n    var jumpToNextPage = React__namespace.useCallback(function () { return virtualizer.scrollToNextItem(stateRef.current.pageIndex, ZERO_OFFSET); }, []);\n    var jumpToPage = React__namespace.useCallback(function (pageIndex) {\n        return 0 <= pageIndex && pageIndex < numPages\n            ? virtualizer.scrollToItem(pageIndex, ZERO_OFFSET)\n            : Promise.resolve();\n    }, []);\n    var jumpToPreviousPage = React__namespace.useCallback(function () { return virtualizer.scrollToPreviousItem(stateRef.current.pageIndex, ZERO_OFFSET); }, []);\n    var openFile = React__namespace.useCallback(function (file) {\n        if (getFileExt(file.name).toLowerCase() !== 'pdf') {\n            return;\n        }\n        new Promise(function (resolve) {\n            var reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = function () {\n                var bytes = new Uint8Array(reader.result);\n                resolve(bytes);\n            };\n        }).then(function (data) {\n            onOpenFile(file.name, data);\n        });\n    }, [onOpenFile]);\n    var rotate = React__namespace.useCallback(function (direction) {\n        var degrees = direction === exports.RotateDirection.Backward ? -90 : 90;\n        var currentRotation = stateRef.current.rotation;\n        var updateRotation = currentRotation === 360 || currentRotation === -360 ? degrees : currentRotation + degrees;\n        renderQueue.markNotRendered();\n        setRotation(updateRotation);\n        setViewerState(__assign(__assign({}, stateRef.current), { rotation: updateRotation }));\n        onRotate({ direction: direction, doc: doc, rotation: updateRotation });\n    }, []);\n    var rotatePage = React__namespace.useCallback(function (pageIndex, direction) {\n        var degrees = direction === exports.RotateDirection.Backward ? -90 : 90;\n        var rotations = stateRef.current.pagesRotation;\n        var currentPageRotation = rotations.has(pageIndex) ? rotations.get(pageIndex) : initialRotation;\n        var finalRotation = currentPageRotation + degrees;\n        var updateRotations = rotations.set(pageIndex, finalRotation);\n        setPagesRotation(updateRotations);\n        setPagesRotationChanged(function (value) { return !value; });\n        setViewerState(__assign(__assign({}, stateRef.current), { pagesRotation: updateRotations, rotatedPage: pageIndex }));\n        onRotatePage({ direction: direction, doc: doc, pageIndex: pageIndex, rotation: finalRotation });\n        renderQueue.markRendering(pageIndex);\n        setRenderPageIndex(pageIndex);\n    }, []);\n    var switchScrollMode = React__namespace.useCallback(function (scrollMode) {\n        setViewerState(__assign(__assign({}, stateRef.current), { scrollMode: scrollMode }));\n        setCurrentScrollMode(scrollMode);\n    }, []);\n    var switchViewMode = React__namespace.useCallback(function (viewMode) {\n        setViewerState(__assign(__assign({}, stateRef.current), { viewMode: viewMode }));\n        setCurrentViewMode(viewMode);\n    }, []);\n    var zoom = React__namespace.useCallback(function (newScale) {\n        var pagesEle = pagesRef.current;\n        var currentPage = stateRef.current.pageIndex;\n        if (currentPage < 0 || currentPage >= numPages) {\n            return;\n        }\n        var currentPageHeight = pageSizes[currentPage].pageHeight;\n        var currentPageWidth = pageSizes[currentPage].pageWidth;\n        var updateScale = pagesEle\n            ? typeof newScale === 'string'\n                ? calculateScale(pagesEle, currentPageHeight, currentPageWidth, newScale, stateRef.current.viewMode, numPages)\n                : newScale\n            : 1;\n        keepSpecialZoomLevelRef.current = typeof newScale === 'string' ? newScale : null;\n        if (updateScale === stateRef.current.scale) {\n            return;\n        }\n        setRenderQueueKey(function (key) { return key + 1; });\n        renderQueue.markNotRendered();\n        setScale(updateScale);\n        onZoom({ doc: doc, scale: updateScale });\n        setViewerState(__assign(__assign({}, stateRef.current), { scale: updateScale }));\n    }, []);\n    var enterFullScreenMode = React__namespace.useCallback(function (target) {\n        fullScreen.enterFullScreenMode(target);\n    }, []);\n    var exitFullScreenMode = React__namespace.useCallback(function () {\n        fullScreen.exitFullScreenMode();\n    }, []);\n    React__namespace.useEffect(function () {\n        setViewerState(__assign(__assign({}, stateRef.current), { fullScreenMode: fullScreen.fullScreenMode }));\n    }, [fullScreen.fullScreenMode]);\n    React__namespace.useEffect(function () {\n        var pluginMethods = {\n            enterFullScreenMode: enterFullScreenMode,\n            exitFullScreenMode: exitFullScreenMode,\n            getPagesContainer: getPagesContainer,\n            getViewerState: getViewerState,\n            jumpToDestination: jumpToDestination,\n            jumpToNextDestination: jumpToNextDestination,\n            jumpToPreviousDestination: jumpToPreviousDestination,\n            jumpToNextPage: jumpToNextPage,\n            jumpToPreviousPage: jumpToPreviousPage,\n            jumpToPage: jumpToPage,\n            openFile: openFile,\n            rotate: rotate,\n            rotatePage: rotatePage,\n            setViewerState: setViewerState,\n            switchScrollMode: switchScrollMode,\n            switchViewMode: switchViewMode,\n            zoom: zoom,\n        };\n        plugins.forEach(function (plugin) {\n            if (plugin.install) {\n                plugin.install(pluginMethods);\n            }\n        });\n        return function () {\n            plugins.forEach(function (plugin) {\n                if (plugin.uninstall) {\n                    plugin.uninstall(pluginMethods);\n                }\n            });\n        };\n    }, [docId]);\n    React__namespace.useEffect(function () {\n        onDocumentLoad({ doc: doc, file: currentFile });\n        plugins.forEach(function (plugin) {\n            plugin.onDocumentLoad && plugin.onDocumentLoad({ doc: doc, file: currentFile });\n        });\n    }, [docId]);\n    var boundingClientRect = virtualizer.boundingClientRect;\n    useRunOnce(function () {\n        if (initialPage) {\n            jumpToPage(initialPage);\n        }\n    }, boundingClientRect.height > 0 && boundingClientRect.width > 0);\n    useIsomorphicLayoutEffect(function () {\n        var latestPage = stateRef.current.pageIndex;\n        if (latestPage > -1 && previousScrollMode !== currentScrollMode) {\n            virtualizer.scrollToItem(latestPage, ZERO_OFFSET).then(function () {\n                if (fullScreen.fullScreenMode === exports.FullScreenMode.EnteredCompletely) {\n                    if (!enableSmoothScroll) {\n                        renderQueue.markNotRendered();\n                    }\n                    forceTargetFullScreenRef.current = -1;\n                }\n            });\n        }\n    }, [currentScrollMode]);\n    useIsomorphicLayoutEffect(function () {\n        var latestPage = stateRef.current.pageIndex;\n        if (latestPage > -1 && previousRotation !== rotation) {\n            virtualizer.scrollToItem(latestPage, ZERO_OFFSET);\n        }\n    }, [rotation]);\n    useIsomorphicLayoutEffect(function () {\n        if (previousScale != 0 && previousScale != stateRef.current.scale) {\n            virtualizer.zoom(stateRef.current.scale / previousScale, stateRef.current.pageIndex).then(function () {\n                if (fullScreen.fullScreenMode === exports.FullScreenMode.EnteredCompletely) {\n                    forceTargetZoomRef.current = -1;\n                }\n            });\n        }\n    }, [scale]);\n    useIsomorphicLayoutEffect(function () {\n        if (previousViewMode === stateRef.current.viewMode) {\n            return;\n        }\n        var startPage = virtualizer.startPage, endPage = virtualizer.endPage, virtualItems = virtualizer.virtualItems;\n        renderQueue.markNotRendered();\n        renderQueue.setRange(startPage, endPage);\n        var _loop_1 = function (i) {\n            var item = virtualItems.find(function (item) { return item.index === i; });\n            if (item) {\n                renderQueue.setVisibility(i, item.visibility);\n            }\n        };\n        for (var i = startPage; i <= endPage; i++) {\n            _loop_1(i);\n        }\n        renderNextPage();\n    }, [currentViewMode]);\n    useIsomorphicLayoutEffect(function () {\n        var latestPage = stateRef.current.pageIndex;\n        if (latestPage > -1 && previousViewMode !== currentViewMode) {\n            virtualizer.scrollToItem(latestPage, ZERO_OFFSET);\n        }\n    }, [currentViewMode]);\n    useIsomorphicLayoutEffect(function () {\n        var latestPage = stateRef.current.pageIndex;\n        if (latestPage > 0 &&\n            latestPage === initialPage &&\n            forceTargetInitialPageRef.current === initialPage &&\n            keepSpecialZoomLevelRef.current) {\n            forceTargetInitialPageRef.current = -1;\n            zoom(keepSpecialZoomLevelRef.current);\n        }\n    }, [currentPage]);\n    React__namespace.useEffect(function () {\n        var isSmoothScrolling = virtualizer.isSmoothScrolling;\n        if (isSmoothScrolling) {\n            return;\n        }\n        if (mostRecentVisitedRef.current === null || mostRecentVisitedRef.current !== currentPage) {\n            mostRecentVisitedRef.current = currentPage;\n            onPageChange({ currentPage: currentPage, doc: doc });\n        }\n    }, [currentPage, virtualizer.isSmoothScrolling]);\n    React__namespace.useEffect(function () {\n        if (fullScreen.fullScreenMode === exports.FullScreenMode.Entering && stateRef.current.scrollMode === exports.ScrollMode.Page) {\n            forceTargetFullScreenRef.current = stateRef.current.pageIndex;\n        }\n        if (fullScreen.fullScreenMode === exports.FullScreenMode.EnteredCompletely &&\n            stateRef.current.scrollMode === exports.ScrollMode.Page &&\n            enableSmoothScroll) {\n            forceTargetFullScreenRef.current = -1;\n        }\n        if (fullScreen.fullScreenMode === exports.FullScreenMode.EnteredCompletely && keepSpecialZoomLevelRef.current) {\n            forceTargetZoomRef.current = stateRef.current.pageIndex;\n            zoom(keepSpecialZoomLevelRef.current);\n        }\n    }, [fullScreen.fullScreenMode]);\n    React__namespace.useEffect(function () {\n        if (fullScreen.fullScreenMode === exports.FullScreenMode.Entering ||\n            fullScreen.fullScreenMode === exports.FullScreenMode.Exitting ||\n            virtualizer.isSmoothScrolling) {\n            return;\n        }\n        var startPage = virtualizer.startPage, endPage = virtualizer.endPage, maxVisbilityIndex = virtualizer.maxVisbilityIndex, virtualItems = virtualizer.virtualItems;\n        var currentPage = maxVisbilityIndex;\n        var isFullScreen = fullScreen.fullScreenMode === exports.FullScreenMode.Entered ||\n            fullScreen.fullScreenMode === exports.FullScreenMode.EnteredCompletely;\n        if (isFullScreen && currentPage !== forceTargetFullScreenRef.current && forceTargetFullScreenRef.current > -1) {\n            return;\n        }\n        if (isFullScreen && currentPage !== forceTargetZoomRef.current && forceTargetZoomRef.current > -1) {\n            return;\n        }\n        setCurrentPage(currentPage);\n        setViewerState(__assign(__assign({}, stateRef.current), { pageIndex: currentPage }));\n        renderQueue.setRange(startPage, endPage);\n        var _loop_2 = function (i) {\n            var item = virtualItems.find(function (item) { return item.index === i; });\n            if (item) {\n                renderQueue.setVisibility(i, item.visibility);\n            }\n        };\n        for (var i = startPage; i <= endPage; i++) {\n            _loop_2(i);\n        }\n        renderNextPage();\n    }, [\n        virtualizer.startPage,\n        virtualizer.endPage,\n        virtualizer.isSmoothScrolling,\n        virtualizer.maxVisbilityIndex,\n        fullScreen.fullScreenMode,\n        pagesRotationChanged,\n        rotation,\n        scale,\n    ]);\n    var handlePageRenderCompleted = React__namespace.useCallback(function (pageIndex) {\n        renderQueue.markRendered(pageIndex);\n        renderNextPage();\n    }, [renderQueueKey]);\n    var renderNextPage = function () {\n        var nextPage = renderQueue.getHighestPriorityPage();\n        if (nextPage > -1 && renderQueue.isInRange(nextPage)) {\n            renderQueue.markRendering(nextPage);\n            setRenderPageIndex(nextPage);\n        }\n    };\n    var executeNamedAction = function (action) {\n        var previousPage = currentPage - 1;\n        var nextPage = currentPage + 1;\n        switch (action) {\n            case 'FirstPage':\n                jumpToPage(0);\n                break;\n            case 'LastPage':\n                jumpToPage(numPages - 1);\n                break;\n            case 'NextPage':\n                nextPage < numPages && jumpToPage(nextPage);\n                break;\n            case 'PrevPage':\n                previousPage >= 0 && jumpToPage(previousPage);\n                break;\n        }\n    };\n    var renderViewer = React__namespace.useCallback(function () {\n        var virtualItems = virtualizer.virtualItems;\n        var chunks = [];\n        switch (currentViewMode) {\n            case exports.ViewMode.DualPage:\n                chunks = chunk(virtualItems, 2);\n                break;\n            case exports.ViewMode.DualPageWithCover:\n                if (virtualItems.length) {\n                    chunks =\n                        virtualItems[0].index === 0\n                            ? [[virtualItems[0]]].concat(chunk(virtualItems.slice(1), 2))\n                            : chunk(virtualItems, 2);\n                }\n                break;\n            case exports.ViewMode.SinglePage:\n            default:\n                chunks = chunk(virtualItems, 1);\n                break;\n        }\n        var pageLabel = l10n && l10n.core ? l10n.core.pageLabel : 'Page {{pageIndex}}';\n        var slot = {\n            attrs: {\n                className: 'rpv-core__inner-container',\n                'data-testid': 'core__inner-container',\n                ref: containerRef,\n                style: {\n                    height: '100%',\n                },\n            },\n            children: React__namespace.createElement(React__namespace.Fragment, null),\n            subSlot: {\n                attrs: {\n                    'data-testid': 'core__inner-pages',\n                    className: classNames({\n                        'rpv-core__inner-pages': true,\n                        'rpv-core__inner-pages--horizontal': currentScrollMode === exports.ScrollMode.Horizontal,\n                        'rpv-core__inner-pages--rtl': isRtl,\n                        'rpv-core__inner-pages--single': currentScrollMode === exports.ScrollMode.Page,\n                        'rpv-core__inner-pages--vertical': currentScrollMode === exports.ScrollMode.Vertical,\n                        'rpv-core__inner-pages--wrapped': currentScrollMode === exports.ScrollMode.Wrapped,\n                    }),\n                    ref: pagesRef,\n                    style: {\n                        height: '100%',\n                        position: 'relative',\n                    },\n                },\n                children: (React__namespace.createElement(\"div\", { \"data-testid\": \"core__inner-current-page-\".concat(currentPage), style: Object.assign({\n                        '--scale-factor': scale,\n                    }, virtualizer.getContainerStyles()) }, chunks.map(function (items) { return (React__namespace.createElement(\"div\", { className: classNames({\n                        'rpv-core__inner-page-container': true,\n                        'rpv-core__inner-page-container--single': currentScrollMode === exports.ScrollMode.Page,\n                    }), style: virtualizer.getItemContainerStyles(items[0]), key: \"\".concat(items[0].index, \"-\").concat(currentViewMode) }, items.map(function (item) {\n                    var isCover = currentViewMode === exports.ViewMode.DualPageWithCover &&\n                        (item.index === 0 || (numPages % 2 === 0 && item.index === numPages - 1));\n                    return (React__namespace.createElement(\"div\", { \"aria-label\": pageLabel.replace('{{pageIndex}}', \"\".concat(item.index + 1)), className: classNames({\n                            'rpv-core__inner-page': true,\n                            'rpv-core__inner-page--dual-even': currentViewMode === exports.ViewMode.DualPage && item.index % 2 === 0,\n                            'rpv-core__inner-page--dual-odd': currentViewMode === exports.ViewMode.DualPage && item.index % 2 === 1,\n                            'rpv-core__inner-page--dual-cover': isCover,\n                            'rpv-core__inner-page--dual-cover-even': currentViewMode === exports.ViewMode.DualPageWithCover &&\n                                !isCover &&\n                                item.index % 2 === 0,\n                            'rpv-core__inner-page--dual-cover-odd': currentViewMode === exports.ViewMode.DualPageWithCover &&\n                                !isCover &&\n                                item.index % 2 === 1,\n                            'rpv-core__inner-page--single': currentViewMode === exports.ViewMode.SinglePage &&\n                                currentScrollMode === exports.ScrollMode.Page,\n                        }), role: \"region\", key: \"\".concat(item.index, \"-\").concat(currentViewMode), style: Object.assign({}, virtualizer.getItemStyles(item), layoutBuilder.buildPageStyles({\n                            numPages: numPages,\n                            pageIndex: item.index,\n                            scrollMode: currentScrollMode,\n                            viewMode: currentViewMode,\n                        })) },\n                        React__namespace.createElement(PageLayer, { doc: doc, measureRef: item.measureRef, outlines: outlines, pageIndex: item.index, pageRotation: pagesRotation.has(item.index) ? pagesRotation.get(item.index) : 0, pageSize: pageSizes[item.index], plugins: plugins, renderPage: renderPage, renderQueueKey: renderQueueKey, rotation: rotation, scale: scale, shouldRender: renderPageIndex === item.index, viewMode: currentViewMode, onExecuteNamedAction: executeNamedAction, onJumpFromLinkAnnotation: handleJumpFromLinkAnnotation, onJumpToDest: jumpToDestination, onRenderCompleted: handlePageRenderCompleted, onRotatePage: rotatePage })));\n                }))); }))),\n            },\n        };\n        plugins.forEach(function (plugin) {\n            if (plugin.renderViewer) {\n                slot = plugin.renderViewer({\n                    containerRef: containerRef,\n                    doc: doc,\n                    pagesContainerRef: pagesRef,\n                    pagesRotation: pagesRotation,\n                    pageSizes: pageSizes,\n                    rotation: rotation,\n                    slot: slot,\n                    themeContext: themeContext,\n                    jumpToPage: jumpToPage,\n                    openFile: openFile,\n                    rotate: rotate,\n                    rotatePage: rotatePage,\n                    switchScrollMode: switchScrollMode,\n                    switchViewMode: switchViewMode,\n                    zoom: zoom,\n                });\n            }\n        });\n        return slot;\n    }, [plugins, virtualizer]);\n    var renderSlot = React__namespace.useCallback(function (slot) { return (React__namespace.createElement(\"div\", __assign({}, slot.attrs, { style: slot.attrs && slot.attrs.style ? slot.attrs.style : {} }),\n        slot.children,\n        slot.subSlot && renderSlot(slot.subSlot))); }, []);\n    return renderSlot(renderViewer());\n};\n\nvar LEVELS = [\n    0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.4, 2.7, 3.0, 3.3, 3.7, 4.1, 4.6,\n    5.1, 5.7, 6.3, 7.0, 7.7, 8.5, 9.4, 10,\n];\nvar decrease = function (currentLevel) {\n    var found = LEVELS.findIndex(function (item) { return item >= currentLevel; });\n    return found === -1 || found === 0 ? currentLevel : LEVELS[found - 1];\n};\n\nvar RESERVE_HEIGHT = 45;\nvar RESERVE_WIDTH = 45;\nvar PageSizeCalculator = function (_a) {\n    var defaultScale = _a.defaultScale, doc = _a.doc, render = _a.render, scrollMode = _a.scrollMode, viewMode = _a.viewMode;\n    var pagesRef = React__namespace.useRef();\n    var _b = React__namespace.useState({\n        pageSizes: [],\n        scale: 0,\n    }), state = _b[0], setState = _b[1];\n    React__namespace.useLayoutEffect(function () {\n        var queryPageSizes = Array(doc.numPages)\n            .fill(0)\n            .map(function (_, i) {\n            return new Promise(function (resolve, _) {\n                getPage(doc, i).then(function (pdfPage) {\n                    var viewport = pdfPage.getViewport({ scale: 1 });\n                    resolve({\n                        pageHeight: viewport.height,\n                        pageWidth: viewport.width,\n                        rotation: viewport.rotation,\n                    });\n                });\n            });\n        });\n        Promise.all(queryPageSizes).then(function (pageSizes) {\n            var pagesEle = pagesRef.current;\n            if (!pagesEle || pageSizes.length === 0) {\n                return;\n            }\n            var w = pageSizes[0].pageWidth;\n            var h = pageSizes[0].pageHeight;\n            var parentEle = pagesEle.parentElement;\n            var scaleWidth = (parentEle.clientWidth - RESERVE_WIDTH) / w;\n            var scaleHeight = (parentEle.clientHeight - RESERVE_HEIGHT) / h;\n            var scaled = scaleWidth;\n            switch (scrollMode) {\n                case exports.ScrollMode.Horizontal:\n                    scaled = Math.min(scaleWidth, scaleHeight);\n                    break;\n                case exports.ScrollMode.Vertical:\n                default:\n                    scaled = scaleWidth;\n                    break;\n            }\n            var scale = defaultScale\n                ? typeof defaultScale === 'string'\n                    ? calculateScale(parentEle, h, w, defaultScale, viewMode, doc.numPages)\n                    : defaultScale\n                : decrease(scaled);\n            setState({ pageSizes: pageSizes, scale: scale });\n        });\n    }, [doc.loadingTask.docId]);\n    return state.pageSizes.length === 0 || state.scale === 0 ? (React__namespace.createElement(\"div\", { className: \"rpv-core__page-size-calculator\", \"data-testid\": \"core__page-size-calculating\", ref: pagesRef },\n        React__namespace.createElement(Spinner, null))) : (render(state.pageSizes, state.scale));\n};\n\nvar LoadingStatus = (function () {\n    function LoadingStatus() {\n    }\n    return LoadingStatus;\n}());\n\nvar AskForPasswordState = (function (_super) {\n    __extends(AskForPasswordState, _super);\n    function AskForPasswordState(verifyPassword, passwordStatus) {\n        var _this = _super.call(this) || this;\n        _this.verifyPassword = verifyPassword;\n        _this.passwordStatus = passwordStatus;\n        return _this;\n    }\n    return AskForPasswordState;\n}(LoadingStatus));\n\nvar AskingPassword = function (_a) {\n    var passwordStatus = _a.passwordStatus, renderProtectedView = _a.renderProtectedView, verifyPassword = _a.verifyPassword, onDocumentAskPassword = _a.onDocumentAskPassword;\n    var l10n = React__namespace.useContext(LocalizationContext).l10n;\n    var _b = React__namespace.useState(''), password = _b[0], setPassword = _b[1];\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var submit = function () { return verifyPassword(password); };\n    var handleKeyDown = function (e) {\n        if (e.key === 'Enter') {\n            submit();\n        }\n    };\n    React__namespace.useEffect(function () {\n        if (onDocumentAskPassword) {\n            onDocumentAskPassword({\n                verifyPassword: verifyPassword,\n            });\n        }\n    }, []);\n    if (renderProtectedView) {\n        return renderProtectedView({\n            passwordStatus: passwordStatus,\n            verifyPassword: verifyPassword,\n        });\n    }\n    return (React__namespace.createElement(\"div\", { className: \"rpv-core__asking-password-wrapper\" },\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__asking-password': true,\n                'rpv-core__asking-password--rtl': isRtl,\n            }) },\n            React__namespace.createElement(\"div\", { className: \"rpv-core__asking-password-message\" },\n                passwordStatus === exports.PasswordStatus.RequiredPassword &&\n                    l10n.core.askingPassword\n                        .requirePasswordToOpen,\n                passwordStatus === exports.PasswordStatus.WrongPassword &&\n                    l10n.core.wrongPassword.tryAgain),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__asking-password-body\" },\n                React__namespace.createElement(\"div\", { className: classNames({\n                        'rpv-core__asking-password-input': true,\n                        'rpv-core__asking-password-input--ltr': !isRtl,\n                        'rpv-core__asking-password-input--rtl': isRtl,\n                    }) },\n                    React__namespace.createElement(TextBox, { testId: \"core__asking-password-input\", type: \"password\", value: password, onChange: setPassword, onKeyDown: handleKeyDown })),\n                React__namespace.createElement(PrimaryButton, { onClick: submit }, l10n.core.askingPassword.submit)))));\n};\n\nvar CompletedState = (function (_super) {\n    __extends(CompletedState, _super);\n    function CompletedState(doc) {\n        var _this = _super.call(this) || this;\n        _this.doc = doc;\n        return _this;\n    }\n    return CompletedState;\n}(LoadingStatus));\n\nvar FailureState = (function (_super) {\n    __extends(FailureState, _super);\n    function FailureState(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return FailureState;\n}(LoadingStatus));\n\nvar LoadingState = (function (_super) {\n    __extends(LoadingState, _super);\n    function LoadingState(percentages) {\n        var _this = _super.call(this) || this;\n        _this.percentages = percentages;\n        return _this;\n    }\n    return LoadingState;\n}(LoadingStatus));\n\nvar DocumentLoader = function (_a) {\n    var characterMap = _a.characterMap, file = _a.file, httpHeaders = _a.httpHeaders, render = _a.render, renderError = _a.renderError, renderLoader = _a.renderLoader, renderProtectedView = _a.renderProtectedView, transformGetDocumentParams = _a.transformGetDocumentParams, withCredentials = _a.withCredentials, onDocumentAskPassword = _a.onDocumentAskPassword;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var _b = React__namespace.useState(new LoadingState(0)), status = _b[0], setStatus = _b[1];\n    var docRef = React__namespace.useRef('');\n    var isMounted = useIsMounted();\n    React__namespace.useEffect(function () {\n        docRef.current = '';\n        setStatus(new LoadingState(0));\n        var worker = new PdfJsApi__namespace.PDFWorker({ name: \"PDFWorker_\".concat(Date.now()) });\n        var params = Object.assign({\n            httpHeaders: httpHeaders,\n            withCredentials: withCredentials,\n            worker: worker,\n        }, 'string' === typeof file ? { url: file } : { data: file }, characterMap\n            ? {\n                cMapUrl: characterMap.url,\n                cMapPacked: characterMap.isCompressed,\n            }\n            : {});\n        var transformParams = transformGetDocumentParams ? transformGetDocumentParams(params) : params;\n        var loadingTask = PdfJsApi__namespace.getDocument(transformParams);\n        loadingTask.onPassword = function (verifyPassword, reason) {\n            switch (reason) {\n                case PdfJsApi__namespace.PasswordResponses.NEED_PASSWORD:\n                    isMounted.current &&\n                        setStatus(new AskForPasswordState(verifyPassword, exports.PasswordStatus.RequiredPassword));\n                    break;\n                case PdfJsApi__namespace.PasswordResponses.INCORRECT_PASSWORD:\n                    isMounted.current &&\n                        setStatus(new AskForPasswordState(verifyPassword, exports.PasswordStatus.WrongPassword));\n                    break;\n            }\n        };\n        loadingTask.onProgress = function (progress) {\n            var loaded = progress.total > 0\n                ?\n                    Math.min(100, (100 * progress.loaded) / progress.total)\n                : 100;\n            if (isMounted.current && docRef.current === '') {\n                setStatus(new LoadingState(loaded));\n            }\n        };\n        loadingTask.promise.then(function (doc) {\n            docRef.current = doc.loadingTask.docId;\n            isMounted.current && setStatus(new CompletedState(doc));\n        }, function (err) {\n            return isMounted.current &&\n                !worker.destroyed &&\n                setStatus(new FailureState({\n                    message: err.message || 'Cannot load document',\n                    name: err.name,\n                }));\n        });\n        return function () {\n            loadingTask.destroy();\n            worker.destroy();\n        };\n    }, [file]);\n    if (status instanceof AskForPasswordState) {\n        return (React__namespace.createElement(AskingPassword, { passwordStatus: status.passwordStatus, renderProtectedView: renderProtectedView, verifyPassword: status.verifyPassword, onDocumentAskPassword: onDocumentAskPassword }));\n    }\n    if (status instanceof CompletedState) {\n        return render(status.doc);\n    }\n    if (status instanceof FailureState) {\n        return renderError ? (renderError(status.error)) : (React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__doc-error': true,\n                'rpv-core__doc-error--rtl': isRtl,\n            }) },\n            React__namespace.createElement(\"div\", { className: \"rpv-core__doc-error-text\" }, status.error.message)));\n    }\n    return (React__namespace.createElement(\"div\", { \"data-testid\": \"core__doc-loading\", className: classNames({\n            'rpv-core__doc-loading': true,\n            'rpv-core__doc-loading--rtl': isRtl,\n        }) }, renderLoader ? renderLoader(status.percentages) : React__namespace.createElement(Spinner, null)));\n};\n\nvar isDarkMode = function () {\n    return typeof window !== 'undefined' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\n\nvar withTheme = function (theme, onSwitchTheme) {\n    var initialTheme = React__namespace.useMemo(function () { return (theme === 'auto' ? (isDarkMode() ? 'dark' : 'light') : theme); }, []);\n    var _a = React__namespace.useState(initialTheme), currentTheme = _a[0], setCurrentTheme = _a[1];\n    var prevTheme = usePrevious(currentTheme);\n    React__namespace.useEffect(function () {\n        if (theme !== 'auto') {\n            return;\n        }\n        var media = window.matchMedia('(prefers-color-scheme: dark)');\n        var handler = function (e) {\n            setCurrentTheme(e.matches ? 'dark' : 'light');\n        };\n        media.addEventListener('change', handler);\n        return function () { return media.removeEventListener('change', handler); };\n    }, []);\n    React__namespace.useEffect(function () {\n        if (currentTheme !== prevTheme && onSwitchTheme) {\n            onSwitchTheme(currentTheme);\n        }\n    }, [currentTheme]);\n    React__namespace.useEffect(function () {\n        if (theme !== currentTheme) {\n            setCurrentTheme(theme);\n        }\n    }, [theme]);\n    return {\n        currentTheme: currentTheme,\n        setCurrentTheme: setCurrentTheme,\n    };\n};\n\nvar isSameUrl = function (a, b) {\n    var typeA = typeof a;\n    var typeB = typeof b;\n    if (typeA === 'string' && typeB === 'string' && a === b) {\n        return true;\n    }\n    if (typeA === 'object' && typeB === 'object') {\n        return a.length === b.length && a.every(function (v, i) { return v === b[i]; });\n    }\n    return false;\n};\n\nvar NUM_OVERSCAN_PAGES = 3;\nvar DEFAULT_RENDER_RANGE = function (visiblePagesRange) {\n    return {\n        startPage: visiblePagesRange.startPage - NUM_OVERSCAN_PAGES,\n        endPage: visiblePagesRange.endPage + NUM_OVERSCAN_PAGES,\n    };\n};\nvar Viewer = function (_a) {\n    var characterMap = _a.characterMap, defaultScale = _a.defaultScale, _b = _a.enableSmoothScroll, enableSmoothScroll = _b === void 0 ? true : _b, fileUrl = _a.fileUrl, _c = _a.httpHeaders, httpHeaders = _c === void 0 ? {} : _c, _d = _a.initialPage, initialPage = _d === void 0 ? 0 : _d, pageLayout = _a.pageLayout, _e = _a.initialRotation, initialRotation = _e === void 0 ? 0 : _e, localization = _a.localization, _f = _a.plugins, plugins = _f === void 0 ? [] : _f, renderError = _a.renderError, renderLoader = _a.renderLoader, renderPage = _a.renderPage, renderProtectedView = _a.renderProtectedView, _g = _a.scrollMode, scrollMode = _g === void 0 ? exports.ScrollMode.Vertical : _g, _h = _a.setRenderRange, setRenderRange = _h === void 0 ? DEFAULT_RENDER_RANGE : _h, transformGetDocumentParams = _a.transformGetDocumentParams, _j = _a.theme, theme = _j === void 0 ? {\n        direction: exports.TextDirection.LeftToRight,\n        theme: 'light',\n    } : _j, _k = _a.viewMode, viewMode = _k === void 0 ? exports.ViewMode.SinglePage : _k, _l = _a.withCredentials, withCredentials = _l === void 0 ? false : _l, onDocumentAskPassword = _a.onDocumentAskPassword, _m = _a.onDocumentLoad, onDocumentLoad = _m === void 0 ? function () {\n    } : _m, _o = _a.onPageChange, onPageChange = _o === void 0 ? function () {\n    } : _o, _p = _a.onRotate, onRotate = _p === void 0 ? function () {\n    } : _p, _q = _a.onRotatePage, onRotatePage = _q === void 0 ? function () {\n    } : _q, _r = _a.onSwitchTheme, onSwitchTheme = _r === void 0 ? function () {\n    } : _r, _s = _a.onZoom, onZoom = _s === void 0 ? function () {\n    } : _s;\n    var _t = React__namespace.useState({\n        data: fileUrl,\n        name: typeof fileUrl === 'string' ? fileUrl : '',\n        shouldLoad: false,\n    }), file = _t[0], setFile = _t[1];\n    var openFile = function (fileName, data) {\n        setFile({\n            data: data,\n            name: fileName,\n            shouldLoad: true,\n        });\n    };\n    var _u = React__namespace.useState(false), visible = _u[0], setVisible = _u[1];\n    var prevFile = usePrevious(file);\n    React__namespace.useEffect(function () {\n        if (!isSameUrl(prevFile.data, fileUrl)) {\n            setFile({\n                data: fileUrl,\n                name: typeof fileUrl === 'string' ? fileUrl : '',\n                shouldLoad: visible,\n            });\n        }\n    }, [fileUrl, visible]);\n    var visibilityChanged = function (params) {\n        setVisible(params.isVisible);\n        if (params.isVisible) {\n            setFile(function (currentFile) { return Object.assign({}, currentFile, { shouldLoad: true }); });\n        }\n    };\n    var containerRef = useIntersectionObserver({\n        onVisibilityChanged: visibilityChanged,\n    });\n    var themeProps = typeof theme === 'string' ? { direction: exports.TextDirection.LeftToRight, theme: theme } : theme;\n    var _v = React__namespace.useState(localization || DefaultLocalization), l10n = _v[0], setL10n = _v[1];\n    var localizationContext = { l10n: l10n, setL10n: setL10n };\n    var themeContext = Object.assign({}, { direction: themeProps.direction }, withTheme(themeProps.theme || 'light', onSwitchTheme));\n    React__namespace.useEffect(function () {\n        if (localization) {\n            setL10n(localization);\n        }\n    }, [localization]);\n    return (React__namespace.createElement(LocalizationContext.Provider, { value: localizationContext },\n        React__namespace.createElement(ThemeContext.Provider, { value: themeContext },\n            React__namespace.createElement(\"div\", { ref: containerRef, className: \"rpv-core__viewer rpv-core__viewer--\".concat(themeContext.currentTheme), \"data-testid\": \"core__viewer\", style: {\n                    height: '100%',\n                    width: '100%',\n                } }, file.shouldLoad && (React__namespace.createElement(DocumentLoader, { characterMap: characterMap, file: file.data, httpHeaders: httpHeaders, render: function (doc) { return (React__namespace.createElement(PageSizeCalculator, { defaultScale: defaultScale, doc: doc, render: function (pageSizes, initialScale) { return (React__namespace.createElement(Inner, { currentFile: {\n                            data: file.data,\n                            name: file.name,\n                        }, defaultScale: defaultScale, doc: doc, enableSmoothScroll: enableSmoothScroll, initialPage: initialPage, initialRotation: initialRotation, initialScale: initialScale, pageLayout: pageLayout, pageSizes: pageSizes, plugins: plugins, renderPage: renderPage, scrollMode: scrollMode, setRenderRange: setRenderRange, viewMode: viewMode, viewerState: {\n                            file: file,\n                            fullScreenMode: exports.FullScreenMode.Normal,\n                            pageIndex: -1,\n                            pageHeight: pageSizes[0].pageHeight,\n                            pageWidth: pageSizes[0].pageWidth,\n                            pagesRotation: new Map(),\n                            rotation: initialRotation,\n                            scale: initialScale,\n                            scrollMode: scrollMode,\n                            viewMode: viewMode,\n                        }, onDocumentLoad: onDocumentLoad, onOpenFile: openFile, onPageChange: onPageChange, onRotate: onRotate, onRotatePage: onRotatePage, onZoom: onZoom })); }, scrollMode: scrollMode, viewMode: viewMode })); }, renderError: renderError, renderLoader: renderLoader, renderProtectedView: renderProtectedView, transformGetDocumentParams: transformGetDocumentParams, withCredentials: withCredentials, onDocumentAskPassword: onDocumentAskPassword }))))));\n};\n\nvar Worker = function (_a) {\n    var children = _a.children, workerUrl = _a.workerUrl;\n    PdfJsApi__namespace.GlobalWorkerOptions.workerSrc = workerUrl;\n    return React__namespace.createElement(React__namespace.Fragment, null, children);\n};\n\nexports.Button = Button;\nexports.Icon = Icon;\nexports.LazyRender = LazyRender;\nexports.LocalizationContext = LocalizationContext;\nexports.Menu = Menu;\nexports.MenuDivider = MenuDivider;\nexports.MenuItem = MenuItem;\nexports.MinimalButton = MinimalButton;\nexports.Modal = Modal;\nexports.Popover = Popover;\nexports.PrimaryButton = PrimaryButton;\nexports.ProgressBar = ProgressBar;\nexports.Separator = Separator;\nexports.Spinner = Spinner;\nexports.Splitter = Splitter;\nexports.TextBox = TextBox;\nexports.ThemeContext = ThemeContext;\nexports.Tooltip = Tooltip;\nexports.Viewer = Viewer;\nexports.Worker = Worker;\nexports.chunk = chunk;\nexports.classNames = classNames;\nexports.createStore = createStore;\nexports.getDestination = getDestination;\nexports.getPage = getPage;\nexports.isFullScreenEnabled = isFullScreenEnabled;\nexports.isMac = isMac;\nexports.useDebounceCallback = useDebounceCallback;\nexports.useIntersectionObserver = useIntersectionObserver;\nexports.useIsMounted = useIsMounted;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.usePrevious = usePrevious;\nexports.useRenderQueue = useRenderQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf-viewer/core/lib/cjs/core.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf-viewer/core/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/core/lib/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2023 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/core.js */ \"(ssr)/./node_modules/@react-pdf-viewer/core/lib/cjs/core.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLHdIQUF5QztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N1bW1lcnktYWkvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvaW5kZXguanM/OTliOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjMgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvY29yZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9jb3JlLmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf-viewer/core/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf-viewer/core/lib/styles/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/core/lib/styles/index.css ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"e66f4f3c22e4\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvc3R5bGVzL2luZGV4LmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1bW1lcnktYWkvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvc3R5bGVzL2luZGV4LmNzcz9mZDBmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiZTY2ZjRmM2MyMmU0XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf-viewer/core/lib/styles/index.css\n");

/***/ })

};
;